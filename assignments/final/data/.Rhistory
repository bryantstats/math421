py_install("pandas")
library(reticulate)
py_install("matplotlib")
library(shiny); runApp('C:/Users/sonou/Dropbox/git/math421/chris.R')
runApp('C:/Users/sonou/Dropbox/git/math421/chris.R')
runApp('C:/Users/sonou/Dropbox/git/math421/chris.R')
runApp('C:/Users/sonou/Dropbox/git/math421/chris.R')
runApp('C:/Users/sonou/Dropbox/git/math421/chris.R')
runApp('C:/Users/sonou/Downloads/a2_3.R')
runApp('C:/Users/sonou/Dropbox/git/math421/chris.R')
runApp('C:/Users/sonou/Dropbox/git/math421/chris.R')
install.packages("linl")
library(rmarkdown)
draft("myletter.Rmd", template="pdf", package="linl", edit=FALSE)
render("myletter.Rmd")
knit_with_parameters('~/myletter.Rmd')
install.packages("komaletter")
library(tidyverse)
df <- read_csv('https://raw.githubusercontent.com/govex/COVID-19/master/data_tables/vaccine_data/us_data/time_series/vaccine_data_us_timeline.csv')
df
df$week <- week(df$Date)
d1 <- df %>% group_by(week, Province_State) %>% summarise(mean = mean(Doses_shipped, na.rm=TRUE))
library(lubridate)
df$week <- week(df$Date)
d1 <- df %>% group_by(week, Province_State) %>% summarise(mean = mean(Doses_shipped, na.rm=TRUE))
d2 <- d1 %>% group_by(week) %>% mutate(rank=rank(-mean)) %>% ungroup()
d2
sum(is.na(d2))
d3 <- d2 %>% filter(rank <= 10)
a1 <- d3 %>% ggplot(aes(x=rank, y=mean, group=state, fill=state, label=state)) + geom_col()+
geom_text(aes(y = mean, label = state), hjust = 1.4)+
coord_flip(clip = "off", expand = FALSE) +scale_x_reverse()+
labs(title = 'Week {closest_state}', x='', y='Total Number of Positive Caeses', fill='state')+
theme(plot.title = element_text(hjust = 1, size = 22),
axis.ticks.y = element_blank(),
axis.text.y  = element_blank()) +
transition_states(week)+
ease_aes("cubic-in-out")
animate(a1, nframes = 400, fps = 10)
library(gganimate)
a1 <- d3 %>% ggplot(aes(x=rank, y=mean, group=state, fill=state, label=state)) + geom_col()+
geom_text(aes(y = mean, label = state), hjust = 1.4)+
coord_flip(clip = "off", expand = FALSE) +scale_x_reverse()+
labs(title = 'Week {closest_state}', x='', y='Total Number of Positive Caeses', fill='state')+
theme(plot.title = element_text(hjust = 1, size = 22),
axis.ticks.y = element_blank(),
axis.text.y  = element_blank()) +
transition_states(week)+
ease_aes("cubic-in-out")
animate(a1, nframes = 400, fps = 10)
a1 <- d3 %>% ggplot(aes(x=rank, y=mean, group=Province_State, fill=Province_State, label=Province_State)) + geom_col()+
geom_text(aes(y = mean, label = Province_State), hjust = 1.4)+
coord_flip(clip = "off", expand = FALSE) +scale_x_reverse()+
labs(title = 'Week {closest_state}', x='', y='Total Number of Positive Caeses', fill='state')+
theme(plot.title = element_text(hjust = 1, size = 22),
axis.ticks.y = element_blank(),
axis.text.y  = element_blank()) +
transition_states(week)+
ease_aes("cubic-in-out")
animate(a1, nframes = 400, fps = 10)
a1 <- d3 %>% ggplot(aes(x=rank, y=mean, group=Province_State, fill=Province_State)) + geom_col()+
geom_text(aes(y = mean, label = Province_State), hjust = 1.4)+
coord_flip(clip = "off", expand = FALSE) +scale_x_reverse()+
labs(title = 'Week {closest_state}', x='', y='Total Number of Positive Caeses', fill='state')+
theme(plot.title = element_text(hjust = 1, size = 22),
axis.ticks.y = element_blank(),
axis.text.y  = element_blank()) +
transition_states(week)+
ease_aes("cubic-in-out")
animate(a1, nframes = 400, fps = 10)
a1 <- d3 %>% ggplot(aes(x=rank, y=mean, group=Province_State, fill=Province_State)) + geom_col()+
geom_text(aes(y = mean, label = Province_State), hjust = 1.4)+
coord_flip(clip = "off", expand = FALSE) +scale_x_reverse()+
labs(title = 'Week {closest_state}', x='', y='Total Number of Positive Caeses', fill='state')+
theme(plot.title = element_text(hjust = 1, size = 22),
axis.ticks.y = element_blank(),
axis.text.y  = element_blank(),
theme(legend.position = "none")
) +
transition_states(week)+
ease_aes("cubic-in-out")
animate(a1, nframes = 400, fps = 10)
a1 <- d3 %>% ggplot(aes(x=rank, y=mean, group=Province_State, fill=Province_State, label=Province_State)) + geom_col()+
geom_text(aes(y = mean, label = Province_State), hjust = 1.4)+
coord_flip(clip = "off", expand = FALSE) +scale_x_reverse()+
labs(title = 'Week {closest_state}', x='', y='Total Number of Positive Caeses', fill='state')+
theme(plot.title = element_text(hjust = 1, size = 22),
axis.ticks.y = element_blank(),
axis.text.y  = element_blank(),theme(legend.position = "none")
) +
transition_states(week)+
ease_aes("cubic-in-out")
animate(a1, nframes = 400, fps = 10)
a1
df <- read_csv('https://raw.githubusercontent.com/govex/COVID-19/master/data_tables/vaccine_data/us_data/time_series/vaccine_data_us_timeline.csv')
library(lubridate)
df$week <- week(df$Date)
d1 <- df %>% group_by(week, Province_State) %>% summarise(mean = mean(Doses_shipped, na.rm=TRUE))
d2 <- d1 %>% group_by(week) %>% mutate(rank=rank(-mean)) %>% ungroup()
d3 <- d2 %>% filter(rank <= 10)
a1 <- d3 %>% ggplot(aes(x=rank, y=mean, group=state, fill=state, label=state)) + geom_col()+
geom_text(aes(y = mean, label = state), hjust = 1.4)+
coord_flip(clip = "off", expand = FALSE) +scale_x_reverse()+
labs(title = 'Week {closest_state}', x='', y='Total Number of Positive Caeses', fill='state')+
theme(plot.title = element_text(hjust = 1, size = 22),
axis.ticks.y = element_blank(),
axis.text.y  = element_blank()) +
transition_states(week)+
ease_aes("cubic-in-out")
animate(a1, nframes = 400, fps = 10)
df <- read_csv('https://raw.githubusercontent.com/govex/COVID-19/master/data_tables/vaccine_data/us_data/time_series/vaccine_data_us_timeline.csv')
library(lubridate)
df$week <- week(df$Date)
d1 <- df %>% group_by(week, Province_State) %>% summarise(mean = mean(Doses_shipped, na.rm=TRUE))
d2 <- d1 %>% group_by(week) %>% mutate(rank=rank(-mean)) %>% ungroup()
d3 <- d2 %>% filter(rank <= 10)
a1 <- d3 %>% ggplot(aes(x=rank, y=mean, group=Province_State, fill=Province_State, label=Province_State)) + geom_col()+
geom_text(aes(y = mean, label = Province_State), hjust = 1.4)+
coord_flip(clip = "off", expand = FALSE) +scale_x_reverse()+
labs(title = 'Week {closest_state}', x='', y='Total Number of Positive Caeses', fill='state')+
theme(plot.title = element_text(hjust = 1, size = 22),
axis.ticks.y = element_blank(),
axis.text.y  = element_blank()) +
transition_states(week)+
ease_aes("cubic-in-out")
animate(a1, nframes = 400, fps = 10)
df <- read_csv('https://raw.githubusercontent.com/govex/COVID-19/master/data_tables/vaccine_data/us_data/time_series/vaccine_data_us_timeline.csv')
library(lubridate)
df$week <- week(df$Date)
d1 <- df %>% group_by(week, Province_State) %>% summarise(mean = mean(Doses_shipped, na.rm=TRUE))
d2 <- d1 %>% group_by(week) %>% mutate(rank=rank(-mean)) %>% ungroup()
d3 <- d2 %>% filter(rank <= 10)
a1 <- d3 %>% ggplot(aes(x=rank, y=mean, group=Province_State, fill=Province_State, label=Province_State)) + geom_col()+
geom_text(aes(y = mean, label = Province_State), hjust = 1.4)+
coord_flip(clip = "off", expand = FALSE) +scale_x_reverse()+
labs(title = 'Week {closest_state}', x='', y='Total Number of Positive Caeses', fill='state')+
theme(plot.title = element_text(hjust = 1, size = 22),
axis.ticks.y = element_blank(),
axis.text.y  = element_blank(), legend.position = "none") +
transition_states(week)+
ease_aes("cubic-in-out")
animate(a1, nframes = 400, fps = 10)
devtools::install_github("hadley/emo")
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
keyword_search = '#olegunnarsolskjaer'
df <- search_tweets(q = keyword_search,
n = 18000,
include_rts = FALSE,
`-filter` = "replies",
lang = "en") %>%
mutate(created_at = ymd_hms(format(created_at, tz = "US/Eastern")))
library(rtweet)
library(tidytext)
library(ggpubr)
library(tidyverse)
library(knitr)
library(lubridate)
keyword_search = '#olegunnarsolskjaer'
df <- search_tweets(q = keyword_search,
n = 18000,
include_rts = FALSE,
`-filter` = "replies",
lang = "en") %>%
mutate(created_at = ymd_hms(format(created_at, tz = "US/Eastern")))
keyword_search = '#olegunnarsolskjaer'
df <- search_tweets(q = keyword_search,
n = 18000,
include_rts = FALSE,
`-filter` = "replies",
lang = "en") %>%
mutate(created_at = ymd_hms(format(created_at, tz = "US/Eastern")))
write_csv(df, 'twitter_data_ole.csv')
df %>%
unnest_tokens(output = hashtag, input = text, token = "tweets") %>%
filter(hashtag != "#olegunnarsolskjaer", str_detect(hashtag, "^#")) %>%
count(hashtag, sort = TRUE) %>%
head(10)
df %>%
unnest_tokens(output = hashtag, input = text, token = "tweets") %>%
filter(hashtag != "#olegunnarsolskjaer", str_detect(hashtag, "^#")) %>%
count(hashtag, sort = TRUE) %>%
head(5) %>%
ggplot(aes(x = n, y = reorder(hashtag, n)))+
geom_col()+
labs(x = 'Frequency', y = '')
df %>%
unnest_tokens(output = hashtag, input = text, token = "tweets") %>%
filter(!hashtag %in% c("#olegunnarsolskjaer",'mufc','manutd','manchesterunited'), str_detect(hashtag, "^#")) %>%
count(hashtag, sort = TRUE) %>%
head(5) %>%
ggplot(aes(x = n, y = reorder(hashtag, n)))+
geom_col()+
labs(x = 'Frequency', y = '')
df %>%
unnest_tokens(output = hashtag, input = text, token = "tweets") %>%
filter(!hashtag %in% c("#olegunnarsolskjaer",'#mufc','#manutd','#manchesterunited'), str_detect(hashtag, "^#")) %>%
count(hashtag, sort = TRUE) %>%
head(5) %>%
ggplot(aes(x = n, y = reorder(hashtag, n)))+
geom_col()+
labs(x = 'Frequency', y = '')
df %>%
unnest_tokens(output = hashtag, input = text, token = "tweets") %>%
filter(!hashtag %in% c("#olegunnarsolskjaer",'#mufc','#manutd','#manchesterunited'), str_detect(hashtag, "^#")) %>%
count(hashtag, sort = TRUE) %>%
head(10)
df %>%
arrange(-favorite_count) %>%
head(5) %>%
select(favorite_count, text, favorite_count)
library(RColorBrewer)
pal <- brewer.pal(8,"Dark2")
library(wordcloud)
df %>%
unnest_tokens(output = hashtag, input = text, token = "tweets") %>%
filter(hashtag != "#olegunnarsolskjaer", str_detect(hashtag, "^#")) %>%
count(hashtag, sort = TRUE) %>%
mutate(hashtag = str_remove(hashtag, '#')) %>%
filter(hashtag != 'mufc') %>%
with(wordcloud(hashtag, n, random.order = FALSE, max.words = 50, colors = pal))
library(RColorBrewer)
pal <- brewer.pal(8,"Dark2")
library(wordcloud)
df %>%
unnest_tokens(output = hashtag, input = text, token = "tweets") %>%
filter(!hashtag %in% c("#olegunnarsolskjaer",'#mufc','#manutd','#manchesterunited'), str_detect(hashtag, "^#")) %>%
count(hashtag, sort = TRUE) %>%
mutate(hashtag = str_remove(hashtag, '#')) %>%
filter(hashtag != 'mufc') %>%
with(wordcloud(hashtag, n, random.order = FALSE, max.words = 50, colors = pal))
# Install emo pakage:
# devtools::install_github("hadley/emo")
library(emo)
df %>%
mutate(emoji = ji_extract_all(text)) %>%
unnest(cols = c(emoji)) %>%
count(emoji, sort = TRUE) %>%
head(5) %>%
ggplot(aes(y=reorder(emoji,n), x=n)) +
geom_col()+
theme(axis.text.y = element_text(size = 40))+
labs(x = 'Frequency', y = '')
words <- df %>%
mutate(text = str_remove_all(text, "&amp;|&lt;|&gt;"),
text = str_remove_all(text, "\\s?(f|ht)(tp)(s?)(://)([^\\.]*)[\\.|/](\\S*)"),
text = str_remove_all(text, "[^\x01-\x7F]")) %>%
unnest_tokens(word, text, token = "tweets") %>%
filter(!word %in% stop_words$word,
!word %in% str_remove_all(stop_words$word, "'"),
str_detect(word, "[a-z]"),
!str_detect(word, "^#"),
!str_detect(word, "@\\S+")) %>%
count(word, sort = TRUE)
al <- brewer.pal(8,"Dark2")
library(wordcloud)
words %>%
with(wordcloud(word, n, random.order = FALSE, max.words = 50, colors = pal))
words <- df %>%
mutate(text = str_remove_all(text, "&amp;|&lt;|&gt;"),
text = str_remove_all(text, "\\s?(f|ht)(tp)(s?)(://)([^\\.]*)[\\.|/](\\S*)"),
text = str_remove_all(text, "[^\x01-\x7F]")) %>%
unnest_tokens(word, text, token = "tweets") %>%
filter(!word %in% stop_words$word,
!word %in% str_remove_all(stop_words$word, "'"),
str_detect(word, "[a-z]"),
!str_detect(word, "^#"),
!str_detect(word, "@\\S+"),
word == 'united') %>%
count(word, sort = TRUE)
al <- brewer.pal(8,"Dark2")
library(wordcloud)
words %>%
with(wordcloud(word, n, random.order = FALSE, max.words = 50, colors = pal))
words <- df %>%
mutate(text = str_remove_all(text, "&amp;|&lt;|&gt;"),
text = str_remove_all(text, "\\s?(f|ht)(tp)(s?)(://)([^\\.]*)[\\.|/](\\S*)"),
text = str_remove_all(text, "[^\x01-\x7F]")) %>%
unnest_tokens(word, text, token = "tweets") %>%
filter(!word %in% stop_words$word,
!word %in% str_remove_all(stop_words$word, "'"),
str_detect(word, "[a-z]"),
!str_detect(word, "^#"),
!str_detect(word, "@\\S+"),
word != 'united') %>%
count(word, sort = TRUE)
al <- brewer.pal(8,"Dark2")
library(wordcloud)
words %>%
with(wordcloud(word, n, random.order = FALSE, max.words = 50, colors = pal))
words <- df %>%
mutate(text = str_remove_all(text, "&amp;|&lt;|&gt;"),
text = str_remove_all(text, "\\s?(f|ht)(tp)(s?)(://)([^\\.]*)[\\.|/](\\S*)"),
text = str_remove_all(text, "[^\x01-\x7F]")) %>%
unnest_tokens(word, text, token = "tweets") %>%
filter(!word %in% stop_words$word,
!word %in% str_remove_all(stop_words$word, "'"),
str_detect(word, "[a-z]"),
!str_detect(word, "^#"),
!str_detect(word, "@\\S+"),
!word %in% c('united','manchester')) %>%
count(word, sort = TRUE)
al <- brewer.pal(8,"Dark2")
library(wordcloud)
words %>%
with(wordcloud(word, n, random.order = FALSE, max.words = 50, colors = pal))
trends_available()
df %>%
unnest_tokens(mentions, text, "tweets", to_lower = FALSE) %>%
filter(str_detect(mentions, "^@")) %>%
count(mentions, sort = TRUE) %>%
head(10) %>%
ggplot(aes(x = n, y = reorder(country, n)))+
geom_col()+
labs(x = 'Frequency', y = '')
df %>%
unnest_tokens(mentions, text, "tweets", to_lower = FALSE) %>%
filter(str_detect(mentions, "^@")) %>%
count(mentions, sort = TRUE) %>%
head(10) %>%
ggplot(aes(x = n, y = reorder(mentions, n)))+
geom_col()+
labs(x = 'Frequency', y = '')
library(ggcorrplot)
install.packages('ggcorrplot')
library(ggplot2)
library(ggcorrplot)
# Correlation matrix
data(mtcars)
corr <- round(cor(mtcars), 1)
# Plot
ggcorrplot(corr, hc.order = TRUE,
type = "lower",
lab = TRUE,
lab_size = 3,
method="circle",
colors = c("tomato2", "white", "springgreen3"),
title="Correlogram of mtcars",
ggtheme=theme_bw)
setwd("C:/Users/sonou/Dropbox/git/math421/data")
df <- read_csv('titanic.csv')
library(tidyverse)
df <- read_csv('titanic.csv')
cor(df)
df
df %>% select_if(is.numeric)
df %>% select_if(is.numeric) %>% cor
corr <- df %>% select_if(is.numeric) %>% cor
ggcorrplot(corr, hc.order = TRUE,
type = "lower",
lab = TRUE,
lab_size = 3,
method="circle",
colors = c("tomato2", "white", "springgreen3"),
title="Correlogram of mtcars",
ggtheme=theme_bw)
sum(is.na(corr))
colSum(is.na(corr))
colSums(is.na(corr))
options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(message = FALSE)
library(tidyverse)
library(knitr)    # For knitting document and include_graphics function
df <- read_csv('https://covidtracking.com/data/download/all-states-history.csv')
df <- df %>% filter(deathIncrease>0, positiveIncrease>0, date<'2021-01-01')
library(lubridate)
df$year <- year(df$date)
df$quarters <- as.factor(quarter(df$date))
df$month <- factor(month(df$date, label = TRUE))
df$day <- wday(df$date)
df$day_type <- case_when(df$day < 6 ~ 'weekday',
TRUE~'weekend')
```
options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(message = FALSE)
library(tidyverse)
library(knitr)    # For knitting document and include_graphics function
df <- read_csv('https://covidtracking.com/data/download/all-states-history.csv')
df <- df %>% filter(deathIncrease>0, positiveIncrease>0, date<'2021-01-01')
library(lubridate)
df$year <- year(df$date)
df$quarters <- as.factor(quarter(df$date))
df$month <- factor(month(df$date, label = TRUE))
df$day <- wday(df$date)
df$day_type <- case_when(df$day < 6 ~ 'weekday',
TRUE~'weekend')
```
library(tidyverse)
library(knitr)    # For knitting document and include_graphics function
df <- read_csv('all-states-history.csv')
library(tidyverse)
library(knitr)    # For knitting document and include_graphics function
df <- read_csv('../data/all-states-history.csv')
df <- df %>% filter(deathIncrease>0, positiveIncrease>0, date<'2021-01-01')
library(lubridate)
df$year <- year(df$date)
df$quarters <- as.factor(quarter(df$date))
df$month <- factor(month(df$date, label = TRUE))
df$day <- wday(df$date)
df$day_type <- case_when(df$day < 6 ~ 'weekday',
TRUE~'weekend')
```
df <- read_csv('../data/all-states-history.csv')
df
df <- df %>% filter(deathIncrease>0, positiveIncrease>0, date<'2021-01-01')
library(lubridate)
df$year <- year(df$date)
df$quarters <- as.factor(quarter(df$date))
df$month <- factor(month(df$date, label = TRUE))
df$day <- wday(df$date)
df$day_type <- case_when(df$day < 6 ~ 'weekday',
TRUE~'weekend')
library(tidyverse)
library(knitr)    # For knitting document and include_graphics function
df <- read_csv('../data/all-states-history.csv')
df <- df %>% filter(deathIncrease>0, positiveIncrease>0, date<'2021-01-01')
library(lubridate)
df$year <- year(df$date)
df$quarters <- as.factor(quarter(df$date))
df$month <- factor(month(df$date, label = TRUE))
df$day <- wday(df$date)
df$day_type <- case_when(df$day < 6 ~ 'weekday',
TRUE~'weekend')
```
df$day_type
df$day_type <- case_when(df$day < 6 ~ 'weekday',
TRUE~'weekend')
df <- read_csv('../data/all-states-history.csv')
df <- df %>% filter(deathIncrease>0, positiveIncrease>0, date<'2021-01-01')
library(lubridate)
df$year <- year(df$date)
df$quarters <- as.factor(quarter(df$date))
df$month <- factor(month(df$date, label = TRUE))
df$day <- wday(df$date)
df$day_type <- case_when(df$day < 6 ~ 'weekday',
TRUE~'weekend')
View(df)
df %>% select_if(is.numeric) %>% cor
corr <- df %>% select_if(is.numeric) %>% cor
ggcorrplot(corr, hc.order = TRUE,
type = "lower",
lab = TRUE,
lab_size = 3,
method="circle",
colors = c("tomato2", "white", "springgreen3"),
title="Correlogram of mtcars",
ggtheme=theme_bw)
?cor
corr <- df %>% select_if(is.numeric) %>% cor(na.rm=TRUE)
df %>% select_if(is.numeric) %>% drop_na
df %>% select_if(is.numeric) %>% drop_na()
df %>% select_if(is.numeric)
df %>% select_if(is.numeric) %>% ~colSums(is.na(.))
df %>% select_if(is.numeric) %>% colSums(is.na)
df %>% select_if(is.numeric) %>% colSums(is.na())
df %>% select_if(is.numeric) %>% colSums(is.na(.))
df %>% select_if(is.numeric) %>% ~colSums(is.na(.))
df %>% select_if(is.numeric) %>% colSums(is.na(.))
df_cor <- df %>% select(deathIncrease, hospitalizedIncrease, positiveIncrease)
sum(is.na(df_cor))
df_cor <- df %>% select(deathIncrease, hospitalizedIncrease, positiveIncrease)
corr <- df_cor %>% select_if(is.numeric) %>% cor
ggcorrplot(corr, hc.order = TRUE,
type = "lower",
lab = TRUE,
lab_size = 3,
method="circle",
colors = c("tomato2", "white", "springgreen3"),
title="Correlogram of mtcars",
ggtheme=theme_bw)
df_cor
df_cor <- df %>% select(deathIncrease, hospitalizedIncrease, positiveIncrease)
corr <- df_cor %>% cor
ggcorrplot(corr, hc.order = TRUE,
type = "lower",
lab = TRUE,
lab_size = 3,
method="circle",
colors = c("tomato2", "white", "springgreen3"),
title="Correlogram of mtcars",
ggtheme=theme_bw)
corr
df %>% names()
df_cor <- df %>% select(deathIncrease, hospitalizedIncrease, positiveIncrease, negativeIncrease)
corr <- df_cor %>% cor
ggcorrplot(corr, hc.order = TRUE,
type = "lower",
lab = TRUE,
lab_size = 3,
method="circle",
colors = c("tomato2", "white", "springgreen3"),
title="Correlogram",
ggtheme=theme_bw)
df_cor <- df %>% select(deathIncrease, hospitalizedIncrease, positiveIncrease, negativeIncrease, totalTestsViralIncrease)
corr <- df_cor %>% cor
ggcorrplot(corr, hc.order = TRUE,
type = "lower",
lab = TRUE,
lab_size = 3,
method="circle",
colors = c("tomato2", "white", "springgreen3"),
title="Correlogram",
ggtheme=theme_bw)
df_cor <- df %>% select(deathIncrease, hospitalizedIncrease, positiveIncrease, negativeIncrease, totalTestsViralIncrease, totalTestResultsIncrease, totalTestEncountersViralIncrease)
corr <- df_cor %>% cor
ggcorrplot(corr, hc.order = TRUE,
type = "lower",
lab = TRUE,
lab_size = 3,
method="circle",
colors = c("tomato2", "white", "springgreen3"),
title="Correlogram",
ggtheme=theme_bw)
