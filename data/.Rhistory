yb = 0
yc = 0
d = tibble(x = c(xa,xb,xc), y = c(ya,yb,yc), type = c('original'))
d[4,] = list(mean(d$x),mean(d$y),'mid_point')
ggplot(d, mapping = aes(x=x, y=y, color=type))+geom_point(size = 10)
# set the importance of the three points
wa = 3
wb = 2
wc = 1
# Set tuning-parameter alpha
# If alpha = 0, the three points have the same weight
# If alpha = 1, the new weights are the original weights
# If alpha < 1, relaxing on the weights (decrease the original weights)
# If alpha > 1, increase the original weights.
# If alpha < 0, it change the direction of the weights
# Tune this alpha to get the best alpha for the data
alpha = -1
# generate weights for the three points
n = 1000
u1 = runif(n)
u2 = runif(n)
u3 = runif(n)
ua = (wa^alpha)*u1
ub = (wb^alpha)*u2
uc = (wc^alpha)*u3
s = ua + ub + uc
va = ua/s
vb = ub/s
vc = uc/s
hist(va)
hist(vb)
hist(vc)
# generate synthetic points
xs = va*xa + vb*xb + vc*xc
ys = va*ya + vb*yb + vc*yc
d_synthetic = tibble(x = xs, y=ys, type ='synthetic')
df = rbind(d, d_synthetic)
ggplot(df, mapping = aes(x=x, y=y, color=type))+geom_point()
x=c(1:3,2)
x=seq(1,100,2)
x
x=seq(1,101,2)
x
x^x
sum(x^x)
x=c(1:100)
sum(x^100)
x=c(1:100)
y=c(2:101)
z=c(3:102)
1/(x*y*z)
sum(1/(x*y*z))
sum(1/(x*y))
tinytex::reinstall_tinytex()
options(htmltools.dir.version = FALSE)
df <-  read.csv('https://covid19.who.int/WHO-COVID-19-global-data.csv')
df <-  read_csv('https://covid19.who.int/WHO-COVID-19-global-data.csv')
library(tidyverse)
df <-  read_csv('https://covid19.who.int/WHO-COVID-19-global-data.csv')
df
df %>% glimpse
str(df)
df
head(df)
head(df. 10)
head(df, 10)
?head
sum(is.na(df))
colSums(is.na(df))
df %>% is.na %>% colSums
10 %>% log
square(10)
squares(10)
cube(10)
10 %>% sin %>% cos
sum(x^2)
sum(log(c(1,2,3))
)
x <- c(1:10)
x %>% log %>% sum
x <- c(1:10)
sum(log(x))
df
df
options(htmltools.dir.version = FALSE)
by(df$New_deaths, df$WHO_region, mean)
?by
by(df$New_deaths, df$WHO_region, FUN=mean)
df
df <-  read.csv('https://covid19.who.int/WHO-COVID-19-global-data.csv')
df
str(df)
df
head(df)
df$WHO_region
table(df$WHO_region)
head(df)
df$New_deaths2 <- cut(df$New_deaths,
breaks = c(-Inf, 2, 5,Inf),
labels=c('low_death','mid_death','high_death'))
table(df$New_deaths2)
df$New_deaths3 <- case_when(df$New_cases<2 ~ 'low_death',
df$New_cases<5 ~ 'mid_death',
TRUE~'high_death')
table(df$New_deaths3)
df$New_deaths3 <- case_when(df$New_deaths<2 ~ 'low_death',
df$New_deaths<5 ~ 'mid_death',
TRUE~'high_death')
table(df$New_deaths3)
table(df$New_deaths2)
df$New_cases2 <- case_when(df$New_cases==0 ~ 'No_new_cases',
TRUE ~ 'Has_new_cases')
table(df$New_cases2)
df$New_cases2 <- ifelse(df$New_cases==0,
'No_new_cases','Has_new_cases')
table(df$New_cases2)
df$New_deaths2 <- case_when(df$New_deaths<2 ~ 'low_death',
df$New_deaths<5 ~ 'mid_death',
TRUE~'high_death')
table(df$New_deaths2)
head(df)
names(df)
table(df$WHO_region)
str(df)
# Check type
class(df$Date_report)
str(df)
# Change type
df$Date_report = as.Date(df$Date_report)
df <-  read.csv('https://covid19.who.int/WHO-COVID-19-global-data.csv')
names(df)[1] <- 'Date_report'
# Check type
class(df$Date_report)
str(df)
# Change type
df$Date_report = as.Date(df$Date_report)
# Change type
str(df)
?weekdays
?year
?years
years(df$Date_report)
library(lubridate)
years(df$Date_report)
table(years(df$Date_report))
month(df$Date_report)
?month
?month
# Create
df$month <- month(df$Date_report)
table(df$month)
df$month
class(df$month)
?month
class(df$month, label = TRUE)
library(lubridate)
class(df$month, label = TRUE)
month(df$month, label = TRUE)
detach(lubridate)
detach("package:lubridate", unload=TRUE)
options(htmltools.dir.version = FALSE)
df <-  read.csv('https://covid19.who.int/WHO-COVID-19-global-data.csv')
names(df)[1] <- 'Date_report'
# Check type
class(df$Date_report)
str(df)
# Change type
df$Date_report = as.Date(df$Date_report)
month(df$month, label = TRUE)
library(lubridate)
month(df$month, label = TRUE)
library(lubridate)
df$month <- month(df$Date_report, label = TRUE)
table(df$month)
?case_when
case_when
library(tidyverse)
case_when
table(df$month)
# Create a variable month
library(lubridate)
df$month <- month(df$Date_report, label = TRUE)
# group months into fewer categories
df$month2 <- case_when(df$month %in% c('Sep','Oct','Nov','Dec') ~ 'fall_semester',
df$month %in% c('Feb','Mar','Apr','May') ~ 'spring_semester',
TRUE~'break')
table(df$month2)
colSums(is.na(df))
options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(message = FALSE, eval = FALSE)
xaringanExtra::use_tile_view()
xaringanExtra::use_tile_view()
install.packages('tidyverse')
library(tidyverse)
install.packages("tidyverse")
library(tidyverse)
library(tidyverse)
df <- read_csv('https://covidtracking.com/data/download/all-states-history.csv')
names(df)
table(df$dataQualityGrade)
df
start_time <- Sys.time()
df <- read.csv('https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-counties.csv')
end_time <- Sys.time()
end_time - start_time
df %>%
filter(date>'01-01-2021') %>%
group_by(state) %>%
summarise(average_deaths = mean(deaths)) %>%
arrange(-average_deaths)
df <- read_csv('https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-counties.csv')
# Select variable state and date for df1
df1 <-  select(df, state, date)
# Deselect variable state from df
df2 <-  select(df, -state)
# Select rows or days with no deaths
df3 <- filter(df, deaths==0, )
fg
df
# conventional way
df1 = group_by(df, state)
summarise(df1, summarise(mean(deaths)))
df1 = group_by(df, state)
df1
summarise(df1, summarise(mean(deaths)))
# Pipe
df %>%
group_by(state) %>%
summarise(mean(deaths))
# conventional way
df1 = filter(df, date>'01-01-2021')
df2 = group_by(df1, state )
summarise(df2, summarise(mean(deaths)))
# Pipe
df %>%
filter(date>'01-01-2021') %>%
group_by(state) %>%
summarise(mean(deaths))
summarise(df1, summarise(mean(deaths)))
# conventional way
df1 = group_by(df, state)
summarise(df1, summarise(mean(deaths)))
df %>%
group_by(state) %>%
summarise(mean(deaths))
df
# conventional way
df1 = group_by(df, state)
df1
summarise(df1, summarise(mean(deaths)))
summarise(df1, summarise(mean(cases)))
?count
df %>% count(cases)
df %>% filter(state=='Rhode Island') %>% count(cases)
df %>% filter(state=='Rhode Island') %>% count(cases) %>% arrange(n)
df %>% filter(state=='Rhode Island') %>% count(cases) %>% arrange(-n)
df <- read_csv(../data/titanic.csv)
df <- read_csv('../data/titanic.csv')
df
df %>% count(Pclass)
df %>% count(Embarked)
setwd("C:/Users/sonou/Dropbox/git/math421")
setwd("C:/Users/sonou/Dropbox/git/math421/data")
options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(message = FALSE)
library(tidyverse)
df <- read_csv('https://bryantstats.github.io/math421/data/titanic_missing.csv')
library(tidyverse)
df <- read_csv('https://bryantstats.github.io/math421/data/titanic_missing.csv')
library(tidyverse)
df <- read_csv('https://bryantstats.github.io/math421/data/titanic_missing.csv')
library(tidyverse)
df <- read_csv('https://bryantstats.github.io/math421/data/titanic_missing.csv')
library(tidyverse)
df <- read_csv('https://bryantstats.github.io/math421/data/titanic_missing.csv')
library(tidyverse)
df <- read_csv('https://bryantstats.github.io/math421/data/titanic_missing.csv')
df <- read_csv('https://bryantstats.github.io/math421/data/titanic_missing.csv')
df <- read_csv('https://bryantstats.github.io/math421/data/titanic_missing.csv')
df <- read_csv('https://bryantstats.github.io/math421/data/titanic_missing.csv')
df
df %>% ggplot(aes(x=Age, y=Fare, color=Sex))+
geom_point()
df %>% ggplot(aes(x=Age, y=Fare))+
geom_point()
df %>% ggplot(aes(x=Age))+
geom_density()
df %>% ggplot(aes(x=Age, color=Sex))+
geom_density()
# Missing values by columns
colSums(is.na(df))
install.packages('vizdat')
library(vizdat)
vis_miss(df)
library(visdat)
vis_miss(df)
vis_dat(df)
vis_expect(df, ~.x >= 25)
vis_expect(df, ~.x == 'Unknown')
vis_expect(df, ~.x == 'unknown')
vis_expect(df, ~.x == 'Not Available')
vis_expect(df, ~.x == 'Missing')
colSums(df=='Unknown')
colSums(df=='Unknown', na.rm = TRUE)
colSums(df=='Missing', na.rm = TRUE)
vis_expect(df, ~.x == 'Missing')
vis_expect(df, ~.x == 'unknown')
colSums(df=='Missing'|df=='unknown', na.rm = TRUE)
colSums(df=='Missing'|df=='Unknown'|df=='Not Available', na.rm = TRUE)
vis_expect(df, ~.x == 'Missing'|x=='Unknown'|x=='Not Available')
vis_expect(df, ~.x == 'Missing'|x=='Unknown'|x=='Not Available')
vis_expect(df, ~. (x == 'Missing'|x=='Unknown'|x=='Not Available'))
vis_expect(df, ~.(x == 'Missing'|x=='Unknown'|x=='Not Available'))
vis_expect(df, function(x){x == 'Missing'|x=='Unknown'|x=='Not Available'})
vis_expect(df, function(x){x == 'Missing'|x=='Unknown'|x=='Not Available'})
options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(message = FALSE)
xaringanExtra::use_tile_view()
xaringanExtra::use_panelset()
xaringanExtra::use_webcam()
xaringanExtra::use_fit_screen()
library(tidyverse)
df <- read_csv('https://bryantstats.github.io/math421/data/titanic_missing.csv')
df %>% summarise(mean_age=mean(Age, na.rm=TRUE))
df %>% ggplot(aes(x=Age, color=Sex))+
geom_density()
# Missing values by columns
colSums(is.na(df))
```
vis_expect(df, function(x){x == 'Missing'|x=='Unknown'|x=='Not Available'})
vis_expect(df, function(x){x == 'Missing'|x=='Unknown'|x=='Not Available'|is.na(x)})
colSums(df=='Missing'|df=='Unknown'|df=='Not Available'|is.na(df), na.rm = TRUE)
```
colSums(df=='Missing'|df=='Unknown'|df=='Not Available'|is.na(df), na.rm = TRUE)
```
colSums(df=='Missing'|df=='Unknown'|df=='Not Available'|is.na(df), na.rm = TRUE)
```
colSums(df=='Missing'|df=='Unknown'|df=='Not Available'|is.na(df), na.rm = TRUE)
```
options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(message = FALSE)
xaringanExtra::use_tile_view()
xaringanExtra::use_panelset()
xaringanExtra::use_webcam()
xaringanExtra::use_fit_screen()
library(tidyverse)
df <- read_csv('https://bryantstats.github.io/math421/data/titanic_missing.csv')
df %>% summarise(mean_age=mean(Age, na.rm=TRUE))
df %>% ggplot(aes(x=Age, color=Sex))+
geom_density()
# Missing values by columns
colSums(is.na(df))
```
colSums(df=='Missing'|df=='Unknown'|df=='Not Available'|is.na(df), na.rm = TRUE)
```
colSums(df=='Missing'|df=='Unknown'|df=='Not Available'|is.na(df), na.rm = TRUE)
colSums(df=='Missing'|df=='Unknown'|df=='Not Available'|is.na(df), na.rm = TRUE)
vis_expect(df, function(x){x == 'Missing'|x=='Unknown'|x=='Not Available'|is.na(df)})
vis_expect(df, function(x){x == 'Missing'|x=='Unknown'|x=='Not Available'|is.na(df)})
vis_expect(df, function(x){x == 'Missing'|x=='Unknown'|x=='Not Available'|is.na(x)})
na_if(df, 'Unknown')
d1 <- na_if(df, 'Unknown')
vis_expect(df, function(x){x == 'Missing'|x=='Unknown'|x=='Not Available'|is.na(x)})
vis_expect(d1, function(x){x == 'Missing'|x=='Unknown'|x=='Not Available'|is.na(x)})
sum(d1=='Unknown')
sum(d1=='Unknown', na.rm=TRUE)
sum(df=='Unknown', na.rm=TRUE)
?na_if
d1 <- na_if(df, c('Unknown','Missing','Not Available'))
df %>% na_if('Unknown')
df <- na_if(df, 'Unknown')
df <- na_if(df, 'Missing')
df <- na_if(df, 'Not Available')
vis_expect(df, function(x){x == 'Missing'|x=='Unknown'|x=='Not Available'|is.na(x)})
```{r}
vis_expect(df, function(x){x == 'Missing'|x=='Unknown'|x=='Not Available'|is.na(x)})
```
vis_expect(df, function(x){x == 'Missing'|x=='Unknown'|x=='Not Available'})
d2 <- df %>% na_if('Unknown') %>% na_if('Missing') %>% na_if('Not Available')
colSums(d2=='Missing'|d2=='Unknown'|d2=='Not Available', na.rm = TRUE)
colSums(df=='Missing'|df=='Unknown'|df=='Not Available', na.rm = TRUE)
colSums(df=='Missing'|df=='Unknown'|df=='Not Available'|is.na(df), na.rm = TRUE)
```
vis_expect(df, function(x){x == 'Missing'|x=='Unknown'|x=='Not Available'})
drop_na
?drop_na
sum(is.na(df))
drop_na(df)
sum(is.na(drop_na(df)))
drop_na(df, Age, Sex)
drop_na(df)
df %>% select(-Age)
df %>% select(-Age, -Sex)
library(tidyverse)
df <- read_csv('https://bryantstats.github.io/math421/data/titanic_missing.csv')
df %>% summarise(mean_age=mean(Age, na.rm=TRUE))
df <- na_if(df, 'Unknown')
df <- na_if(df, 'Missing')
df <- na_if(df, 'Not Available')
# OR Pipe
df <- df %>% na_if('Unknown') %>% na_if('Missing') %>% na_if('Not Available')
sum(is.na(drop_na(df)))
colSums(is.na(df))
replace_na(df$Age, mean_age)
# Replace by the mean (numeric variable)
mean_age <- mean(df$Age, na.rm=TRUE)
replace_na(df$Age, mean_age)
su,(is.na(replace_na(df$Age, mean_age)))
sum(is.na(replace_na(df$Age, mean_age)))
table(df$Sex)
df %>% n_distinct(Sex)
df %>% n_distinct(sex)
df %>% n_distinct(Age)
df
df %>% count(Sex)
df %>% count(Sex, na.rm=TRUE)
n_distinct(df$Sex)
table(df$Sex)
max(table(df$Sex))
which.max(table(df$Sex))
names(which.max(table(df$Sex)))
# Replace by the majority (categorical variable)
majority_sex <- names(which.max(table(df$Sex)))
df$Sex <- replace_na(df$Sex, majority_sex)
table(df$Sex)
n_distinct(df$Sex)
# Replace by the majority (categorical variable)
majority_class <- names(which.max(table(df$Pclass)))
df$Pclass <- replace_na(df$Pclass, majority_class)
?fill
sum(is.na(df))
df
df_fill <- fill(df)
sum(is.na(df_fill))
df_fill
df_fill <- fill(df, .direction='down')
sum(is.na(df_fill))
df_fill <- fill(df)
df_fill <- fill(df$Age)
df_fill <- fill(df$Sex)
df_fill <- fill(df)
fill(df)
df
fill(df, Sex)
fill(df, Age)
fill(df, Cabin)
sum(is.na(fill(df, Cabin)))
library(VIM)
install.packages('VIM')
library(VIM)
aggr(df)
colSums(is.na(df))
df$Age2 <- fill(df$Age)
df$Age2 <- fill(df, Age)
colSums(is.na(df))
colSums(is.na(df))
df
df$Age2
library(VIM)
df <- read_csv('https://bryantstats.github.io/math421/data/titanic_missing.csv')
df <- na_if(df, 'Unknown')
df <- na_if(df, 'Missing')
df <- na_if(df, 'Not Available')
aggr(df)
aggr(df)
fill(df$Age)
fill(df)
fill(df, everything)
fill(df, everything())
d1 <- fill(df, everything())
sum(is.na(d1))
?fill
d1 <- fill(df, everything(), 'downup')
d1 <- fill(df, everything(), .direction = 'downup')
d1
fill(df, everything(), .direction = 'downup')
fill(df, Age, .direction = 'downup')
fill(df, Cabin, .direction = 'downup')
df %>% fill(Age, Sex, Cabin)
df %>% fill(Age, Sex, Cabin, .direction = 'updown')
vis_dat(df)
vis_expect(df, ~.x == 'Missing')
library(VIM)
df <- read_csv('https://bryantstats.github.io/math421/data/titanic_missing.csv')
vis_expect(df, ~.x == 'Missing')
vis_expect(df, function(x){x == 'Missing'|x=='Unknown'|x=='Not Available'})
vis_expect(df, function(x){x == 'Missing'|x=='Unknown'|x=='Not Available'})
vis_expect(df, function(x){x == 'Missing'|x=='Unknown'|x=='Not Available'|is.na(x)})
vis_expect(df, function(x){x == 'Missing'|x=='Unknown'|x=='Not Available'|is.na(x)})
vis_expect(df, is.na)
vis_expect(df, is.na)
df <- read_csv('adult_census.csv')
sum(is.na(df))
df <- read_csv('car.csv')
sum(is.na(df))
colSums(is.na(df))
df <- read_csv('adult_census_missing.csv')
colSums(is.na(df))
aggr(df)
table(df$age)
table(df$occupation)
df
library(visdat)
df <- read_csv('https://bryantstats.github.io/math421/data/titanic_missing.csv')
vis_miss(df)
vis_miss(df)
library(VIM)
vis_expect(df, function(x){x == 'Missing'|x=='Unknown'|x=='Not Available'|is.na(x)})
vis_expect(df, function(x){x == 'Missing'|x=='Unknown'|x=='Not Available'|is.na(x)})
df
colSums(is.na(df))
colSums(is.na(drop_na(df)))
