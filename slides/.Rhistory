x=date,
color=state))+
geom_line()+
geom_point(size=3)+
geom_text(aes(label = positive),
hjust = -.1, size=5) + #<<
transition_reveal(date)
library(gganimate)
df <- read_csv('https://covidtracking.com/data/download/all-states-history.csv')
df$month <- month(df$date)
df %>%
filter(state %in% c('NY','FL')) %>%
ggplot(aes(y=positive,
x=date,
color=state))+
geom_line()+
geom_point(size=3)+
geom_text(aes(label = positive),
hjust = -.1, size=5) + #<<
transition_reveal(date)
df <- read_csv('https://raw.githubusercontent.com/govex/COVID-19/master/data_tables/vaccine_data/us_data/time_series/vaccine_data_us_timeline.csv')
names(df)
df <- read_csv('https://covidtracking.com/data/download/all-states-history.csv')
df$month <- month(df$Date)
df %>%
filter(state %in% c('New York','Florida')) %>%
ggplot(aes(y=Doses_admin,
x=Date,
color=Province_State))+
geom_line()+
geom_point(size=3)+
geom_text(aes(label = Doses_admin),
hjust = -.1, size=5) + #<<
transition_reveal(date)
df$state
df
df <- read_csv('https://raw.githubusercontent.com/govex/COVID-19/master/data_tables/vaccine_data/us_data/time_series/vaccine_data_us_timeline.csv')
df
df$month <- month(df$Date)
df %>%
filter(state %in% c('New York','Florida')) %>%
ggplot(aes(y=Doses_admin,
x=Date,
color=Province_State))+
geom_line()+
geom_point(size=3)+
geom_text(aes(label = Doses_admin),
hjust = -.1, size=5) + #<<
transition_reveal(date)
df$Province_State
df$month <- month(df$Date)
df %>%
filter(Province_State %in% c('New York','Florida')) %>%
ggplot(aes(y=Doses_admin,
x=Date,
color=Province_State))+
geom_line()+
geom_point(size=3)+
geom_text(aes(label = Doses_admin),
hjust = -.1, size=5) + #<<
transition_reveal(date)
library(lubridate)
df$month <- month(df$Date)
df %>%
filter(Province_State %in% c('New York','Florida')) %>%
ggplot(aes(y=Doses_admin,
x=Date,
color=Province_State))+
geom_line()+
geom_point(size=3)+
geom_text(aes(label = Doses_admin),
hjust = -.1, size=5) + #<<
transition_reveal(date)
df
df$month <- month(df$Date)
df %>%
filter(Province_State %in% c('New York','Florida'))
df$month <- month(df$Date)
df %>%
filter(Province_State %in% c('New York','Florida')) %>%
ggplot(aes(y=Doses_admin,
x=Date,
color=Province_State))+
geom_line()
df$month <- month(df$Date)
df %>%
filter(Province_State %in% c('New York','Florida'), Vaccine_Type=='All') %>%
ggplot(aes(y=Doses_admin,
x=Date,
color=Province_State))+
geom_line()+
geom_point(size=3)+
geom_text(aes(label = Doses_admin),
hjust = -.1, size=5) + #<<
transition_reveal(date)
df$month <- month(df$Date)
df %>%
filter(Province_State %in% c('New York','Florida'), Vaccine_Type=='All') %>%
ggplot(aes(y=Doses_admin,
x=Date,
color=Province_State))+
geom_line()
df$month <- month(df$Date)
df %>%
filter(Province_State %in% c('New York','Florida'), Vaccine_Type=='All') %>%
ggplot(aes(y=Doses_admin,
x=Date,
color=Province_State))+
geom_line()+
geom_point(size=3)+
geom_text(aes(label = Doses_admin),
hjust = -.1, size=5) + #<<
transition_reveal(date)
df$month <- month(df$Date)
df %>%
filter(Province_State %in% c('New York','Florida'), Vaccine_Type=='All') %>%
ggplot(aes(y=Doses_admin,
x=Date,
color=Province_State))+
geom_line()+
geom_point(size=3)
df$month <- month(df$Date)
df %>%
filter(Province_State %in% c('New York','Florida'), Vaccine_Type=='All') %>%
ggplot(aes(y=Doses_admin,
x=Date,
color=Province_State))+
geom_line()+
geom_point(size=3)+
geom_text(aes(label = Doses_admin),
hjust = -.1, size=5) + #<<
transition_reveal(Date)
library(tidyverse)
library(gganimate)
library(lubridate)
df <- read_csv('https://raw.githubusercontent.com/govex/COVID-19/master/data_tables/vaccine_data/us_data/time_series/vaccine_data_us_timeline.csv')
df$month <- month(df$Date)
df %>%
filter(Province_State %in% c('New York','Florida'), Vaccine_Type=='All') %>%
ggplot(aes(y=Doses_admin,
x=Date,
color=Province_State))+
geom_line()+
geom_point(size=3)+
geom_text(aes(label = Doses_admin),
hjust = -.1, size=5) + #<<
transition_reveal(Date)
names(df)
library(tidyverse)
library(gganimate)
library(lubridate)
df <- read_csv('https://raw.githubusercontent.com/govex/COVID-19/master/data_tables/vaccine_data/us_data/time_series/vaccine_data_us_timeline.csv')
df %>%
filter(Province_State %in% c('New York','Florida'), Vaccine_Type=='All') %>%
ggplot(aes(y=Doses_alloc,
x=Date,
color=Province_State))+
geom_line()+
geom_point(size=3)+
geom_text(aes(label = Doses_alloc),
hjust = -.1, size=5) + #<<
transition_reveal(Date)
library(tidyverse)
library(gganimate)
library(lubridate)
df <- read_csv('https://raw.githubusercontent.com/govex/COVID-19/master/data_tables/vaccine_data/us_data/time_series/vaccine_data_us_timeline.csv')
df %>%
filter(Province_State %in% c('New York','Florida'), Vaccine_Type=='All') %>%
ggplot(aes(y=Doses_shipped,
x=Date,
color=Province_State))+
geom_line()+
geom_point(size=3)+
geom_text(aes(label = Doses_shipped),
hjust = -.1, size=5) + #<<
transition_reveal(Date)
library(tidyverse)
library(gganimate)
library(lubridate)
df <- read_csv('https://raw.githubusercontent.com/govex/COVID-19/master/data_tables/vaccine_data/us_data/time_series/vaccine_data_us_timeline.csv')
a <- df %>%
filter(Province_State %in% c('New York','Florida'), Vaccine_Type=='All') %>%
ggplot(aes(y=Doses_shipped,
x=Date,
color=Province_State))+
geom_line()+
geom_point(size=3)+
geom_text(aes(label = Doses_shipped),
hjust = -.1, size=5) + #<<
transition_reveal(Date)
animate(a, nframes = 400)
library(tidyverse)
library(gganimate)
library(lubridate)
df <- read_csv('https://raw.githubusercontent.com/govex/COVID-19/master/data_tables/vaccine_data/us_data/time_series/vaccine_data_us_timeline.csv')
df %>%
filter(Province_State %in% c('New York','Florida'), Vaccine_Type=='All') %>%
ggplot(aes(y=Doses_shipped,
x=Date,
color=Province_State))+
geom_line()+
geom_point(size=3)+
geom_text(aes(label = Doses_shipped),
hjust = -.1, size=5) + #<<
transition_reveal(Date) %>% animate(nframes = 10)
# R markdown options
knitr::opts_chunk$set(echo = TRUE,
cache = TRUE,
fig.width = 10,
fig.height = 5,
fig.align = "center",
message = FALSE,
warning = FALSE)
# Load packages
library(gapminder)
library(gganimate)
library(ggplot2)
library(tidyverse)
library(lubridate)
library(knitr)
df <- read_csv('https://raw.githubusercontent.com/owid/covid-19-data/master/public/data/vaccinations/vaccinations.csv')
df
names(df)
df1 <- read_csv('https://covid19.who.int/who-data/vaccination-data.csv')
names(df1)
df1 <- read_csv('https://covid19.who.int/WHO-COVID-19-global-data.csv')
names(df1)
names(df)
df
df1
names(df)
table(df$iso_code)
df
df1
table(df$location)
table(df1$Country)
names(table(df1$Country))
names(table(df$location))
d <- inner_join(df, df1, by = )
names(df)
names(df1)
names(df)[1]
names(df)[1]='Country'
names(df)
names(df1)
d <- inner_join(df, df1, by = 'Country')
d
names(d)
names(table(d$Country))
dim)d
dim(d)
dim(df)
dim(df1)
df1
df
names(df)
names(df1)
names(df1)[1] <- 'date'
names(df1)
d <- inner_join(df, df1, by = c('Country','date')
)
d
names(d)
names(table(d$Country))
names(table(df$Country))
names(table(df1$Country))
names(table(df1$Country))
str_replace(df1$Country, 'United States of America', 'United States')
df1$Country <- str_replace(df1$Country, 'United States of America', 'United States')
names(table(df1$Country))
d <- inner_join(df, df1, by = c('Country','date'))
names(table(d$Country))
d %>% filter(Country=='United States')
d %>% filter(Country=='United States') %>% ggplot(aes(x=to))
names(d)
d %>% filter(Country=='United States') %>% ggplot(aes(x=total_vaccinations, y=Cumulative_deaths))+geom_point()
d %>% filter(Country=='United States') %>% ggplot(aes(x=total_vaccinations, y=date))+geom_point()
d %>% filter(Country=='United States') %>% ggplot(aes(x=Cumulative_deaths, y=date))+geom_point()
d %>% filter(Country=='United States') %>% ggplot(aes(y=Cumulative_deaths, x=date))+geom_point()
d %>% filter(Country=='United States') %>% ggplot(aes(y=total_vaccinations, x=date))+geom_point()
d %>% filter(Country=='United States') %>% ggplot(aes(y=Cumulative_deaths, x=date))+geom_point()
d %>% filter(Country=='United States') %>% ggplot(aes(y=total_vaccinations, x=date))+geom_point()
d1 <- d %>% filter(Country=='United States')
d1
d1 <- d %>% filter(Country=='United States') %>% select(date, total_vaccinations, Cumulative_deaths)
d1
pivot_longer(d1, date)
pivot_longer(d1, total_vaccinations, Cumulative_deaths)
pivot_longer(d1, total_vaccinations)
pivot_longer(d1, c('total_vaccinations',Cumulative_deaths))
d2 <- pivot_longer(d1, c('total_vaccinations',Cumulative_deaths))
d2 %>% ggplot(aes(x=date, y=name))+geom_point()
d2 %>% ggplot(aes(x=date, y=value))+geom_point()
d2 %>% ggplot(aes(x=date, y=value, color = name))+geom_point()
colMeans(is.na(d2))
colMeans(is.na(d1))
pivot_longer(d1, c('total_vaccinations',Cumulative_deaths))
pivot_longer(d1, c('total_vaccinations','Cumulative_deaths'))
pivot_longer(d1, c('total_vaccinations','Cumulative_deaths'))
d2 <- pivot_longer(d1, c('total_vaccinations','Cumulative_deaths'))
d2 %>% ggplot(aes(x=date, y=value, color = name))+geom_point()
d1 %>% ggplot(aes(x=date, y=Cumulative_deaths))+geom_point()
d1 %>% ggplot(aes(x=date, y=total_vaccinations))+geom_point()
d2 %>% ggplot(aes(x=date, y=value, color = name))+geom_point()
d2 %>% filter(name='Cumulative_deaths')+ggplot(aes(x=date, y=value, color = name))+geom_point()
d2 %>% filter(name=='Cumulative_deaths')+ggplot(aes(x=date, y=value, color = name))+geom_point()
d2
d2 %>% filter(name=='Cumulative_deaths') %>% ggplot(aes(x=date, y=value, color = name))+geom_point()
d2 %>% ggplot(aes(x=date, y=value, color = name))+geom_point()
library(patchwork)
install.packages('pachwork')
d1
d1$death_per_vac=d1$Cumulative_deaths/d1$total_vaccinations
d1 %>% ggplot(aes(x=date, y=death_per_vac))+geom_point()
d1 %>% ggplot(aes(x=date, y=death_per_vac))+geom_point()+scale_y_continuous(trans='log2')
d1 %>% ggplot(aes(x=date, y=death_per_vac))+geom_point()+scale_y_continuous(trans='log')
d1 %>% ggplot(aes(x=date, y=death_per_vac))+geom_point()
d1 %>% ggplot(aes(x=date, y=death_per_vac))+geom_point()+scale_y_continuous(trans='log')
grid.arrange(plot1, plot2, ncol=2)
install.packages('gridExtra')
library(gridExtra)
p1 <- d1 %>% ggplot(aes(x=))
names(d1)
p1 <- d1 %>% ggplot(aes(x=date, y=total_vaccinations))+geom_point()
p2 <- d1 %>% ggplot(aes(x=date, y=Cumulative_deaths))+geom_point()
p1
p2
cowplot::plot_grid(p1, p2, labels = "AUTO")
install.packages('cowplot')
cowplot::plot_grid(p1, p2, labels = "AUTO")
d1 %>% ggplot(aes(x=date, y=death_per_vac))+geom_point()+scale_y_continuous(trans='log')
d1 %>% filter(date>'2021-07-01') %>% ggplot(aes(x=date, y=death_per_vac))+geom_point()+scale_y_continuous(trans='log')
d1 %>% filter(date>'2021-06-01') %>% ggplot(aes(x=date, y=death_per_vac))+geom_point()+scale_y_continuous(trans='log')
d1 %>% filter(date>'2021-07-01') %>% ggplot(aes(x=date, y=death_per_vac))+geom_point()+scale_y_continuous(trans='log')
d1 %>% filter(date>'2021-08-01') %>% ggplot(aes(x=date, y=death_per_vac))+geom_point()+scale_y_continuous(trans='log')
df
f1 <- read_csv('https://covid19.who.int/who-data/vaccination-data.csv')
f1
f1
f1 <- read_csv('https://covid19.who.int/who-data/vaccination-data.csv')
f1
names(f1)
f <- read_csv('https://raw.githubusercontent.com/owid/covid-19-data/master/public/data/vaccinations/vaccinations.csv')
f
names(f1)
names(f)
df1
df
names(f)
names(f1)
f1 <- read_csv('https://covid19.who.int/who-data/vaccination-data.csv')
f1
f
table(df1$Country)
f1 <- read_csv('https://covid19.who.int/who-data/vaccination-data.csv')
f1
f1 <- read_csv('https://covid19.who.int/WHO-COVID-19-global-data.csv')
f1
df1 <- read_csv('https://raw.githubusercontent.com/owid/covid-19-data/master/public/data/vaccinations/vaccinations.csv')
df2 <- read_csv('https://covid19.who.int/WHO-COVID-19-global-data.csv')
names(df1)[1]='Country'
names(df2)[1] <- 'date'
df1
names(table(df1$Country))
names(table(df2$Country))
str_replace(df2$Country, 'United States of America', 'United States')
df <- inner_join(df1, df2, by = c('Country','date'))
df
d %>% filter(Country=='United States') %>% ggplot(aes(x=total_vaccinations, y=Cumulative_deaths))+geom_point()
df %>% filter(Country=='United States') %>% ggplot(aes(x=total_vaccinations, y=Cumulative_deaths))+geom_point()
df1 <- read_csv('https://raw.githubusercontent.com/owid/covid-19-data/master/public/data/vaccinations/vaccinations.csv')
df2 <- read_csv('https://covid19.who.int/WHO-COVID-19-global-data.csv')
names(df1)[1]='Country'
names(df2)[1] <- 'date'
str_replace(df2$Country, 'United States of America', 'United States')
df <- inner_join(df1, df2, by = c('Country','date'))
df %>% filter(Country=='United States') %>% ggplot(aes(x=total_vaccinations, y=Cumulative_deaths))+geom_point()
df
d
d %>% filter(Country=='United States') %>% ggplot(aes(x=total_vaccinations, y=date))+geom_point()
df %>% filter(Country=='United States') %>% ggplot(aes(x=total_vaccinations, y=date))+geom_point()
names(table(df1$Country))
names(table(df2$Country))
names(table(df$Country))
df2$Country <- str_replace(df2$Country, 'United States of America', 'United States')
df <- inner_join(df1, df2, by = c('Country','date'))
df %>% filter(Country=='United States') %>% ggplot(aes(x=total_vaccinations, y=date))+geom_point()
df$death_per_vac=df$Cumulative_deaths/df$total_vaccinations
df %>% ggplot(aes(x=date, y=death_per_vac))+geom_point()
d1 %>% ggplot(aes(x=date, y=death_per_vac))+geom_point()
d
df
dd1 <- df %>% filter(Country=='United States')
dd1 %>% ggplot(aes(x=date, y=death_per_vac))+geom_point()
d1 %>% filter(date>'2021-08-01') %>% ggplot(aes(x=date, y=death_per_vac))+geom_point()+scale_y_continuous(trans='log')
d1 %>% filter(date>'2021-07-01') %>% ggplot(aes(x=date, y=death_per_vac))+geom_point()+scale_y_continuous(trans='log')
d1 %>% filter(date>'2021-06-01') %>% ggplot(aes(x=date, y=death_per_vac))+geom_point()+scale_y_continuous(trans='log')
d1 %>% filter(date>'2021-08-01') %>% ggplot(aes(x=date, y=death_per_vac))+geom_point()+scale_y_continuous(trans='log')
df %>% filter(Country=='United States') %>% ggplot(aes(x=total_vaccinations, y=date))+geom_point()
df %>% filter(Country=='United States', date>'2021-07-01') %>% ggplot(aes(x=date, y=death_per_vac))+geom_point()
library(tidyverse)
library(rpart)
df = read_csv("../data/titanic.csv")
setwd("C:/Users/sonou/Dropbox/git/math421/slides")
df = read_csv("../data/titanic.csv")
df
df <- df %>% select(-PassengerId, -Ticket, -Name, -Cabin)
names(df)
# Set the target variable
names(df)[4] <- 'target'
# Correct variables' types
df$Survived <- factor(df$Survived)
df$Pclass = factor(df$Pclass)
df$Sex <- factor(df$Sex)
df$Embarked <- factor(df$Embarked)
df
options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(message = FALSE)
df <- df %>% drop_na(Age)
df <- df %>% drop_na(target)
df
df <- df %>% drop_na(target)
library(tidyverse)
library(rpart)
df = read_csv("../data/titanic.csv")
# Remove some columns
df <- df %>% select(-PassengerId, -Ticket, -Name, -Cabin)
# Set the target variable
names(df)[4] <- 'target'
df <- df %>% drop_na(target)
# Correct variables' types
df$Survived <- factor(df$Survived)
df$Pclass = factor(df$Pclass)
df$Sex <- factor(df$Sex)
df$Embarked <- factor(df$Embarked)
# Handle missing values
df$Age[is.na(df$Age)] = mean(df$Age, na.rm = TRUE)
library(tidyverse)
library(rpart)
df = read_csv("../data/titanic.csv")
# Remove some columns
df <- df %>% select(-PassengerId, -Ticket, -Name, -Cabin)
# Set the target variable
names(df)[4] <- 'target'
df <- df %>% drop_na(target)
# Correct variables' types
df$Survived <- factor(df$Survived)
df$Pclass = factor(df$Pclass)
df$Sex <- factor(df$Sex)
df$Embarked <- factor(df$Embarked)
df = drop_na(df)
# Split the data to train and test
library(caret)
set.seed(00000)
splitIndex <- createDataPartition(df$target, p = .90,
list = FALSE)
df_train <- df[ splitIndex,]
df_test <- df[-splitIndex,]
forest_ranger <- train(target~., data=df_train,
method = "ranger")
pred <- predict(forest_ranger, df_test)
pred
postResample(pred = pred, obs = df_test$target)
library(tidyverse)
library(rpart)
df = read_csv("../data/titanic.csv")
# Remove some columns
df <- df %>% select(-PassengerId, -Ticket, -Name, -Cabin)
# Set the target variable
names(df)[4] <- 'target'
df <- df %>% drop_na(target)
# Correct variables' types
df$Survived <- factor(df$Survived)
df$Pclass = factor(df$Pclass)
df$Sex <- factor(df$Sex)
df$Embarked <- factor(df$Embarked)
df = drop_na(df)
# Split the data to train and test
library(caret)
set.seed(00000)
splitIndex <- createDataPartition(df$target, p = .90,
list = FALSE)
df_train <- df[ splitIndex,]
df_test <- df[-splitIndex,]
forest_ranger <- train(target~., data=df_train,
method = "ranger")
pred <- predict(forest_ranger, df_test)
postResample(pred = pred, obs = df_test$target)
install.packages('tfdataset')
library(keras)
library(tfdatasets)
install.packages('tfdatasets')
install.packages('keras')
library(keras)
library(tfdatasets)
data_dir <- get_file(
origin = "https://storage.googleapis.com/download.tensorflow.org/example_images/flower_photos.tgz",
fname = "flower_photos.tgz",
extract = TRUE
)
data_dir <- file.path(dirname(data_dir), "flower_photos")
data_dir <- get_file(
origin = "https://storage.googleapis.com/download.tensorflow.org/example_images/flower_photos.tgz",
fname = "flower_photos.tgz",
extract = TRUE
)
data_dir <- file.path(dirname(data_dir), "flower_photos")
data_dir <- get_file(
origin = "https://storage.googleapis.com/download.tensorflow.org/example_images/flower_photos.tgz",
fname = "flower_photos.tgz",
extract = TRUE
)
