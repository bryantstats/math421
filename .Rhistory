contour = TRUE,
region = FALSE,
cuts = 5,
data = density_mvn) +
lattice::contourplot(optimal ~ x + y,
data = density_mvn,
at = c(0),
labels = FALSE,
lwd = 3)
lattice::contourplot(optimal ~ x + y,
data = density_mvn,
at = c(0),
labels = FALSE,
lwd = 3,
aspect = 1) +
lattice::xyplot(y ~ x, groups = class, data = points)
library(shiny); runApp('C:/Users/sonou/Dropbox/git/math421/gganimate/shiny_nav/a2_4.R')
runApp('C:/Users/sonou/Dropbox/git/math421/gganimate/shiny_nav/a2_4.R')
runApp('C:/Users/sonou/Dropbox/git/math421/gganimate/shiny_nav/a2_4.R')
runApp('C:/Users/sonou/Dropbox/git/math421/gganimate/shiny_nav/a2_4.R')
runApp('C:/Users/sonou/Dropbox/git/math421/gganimate/shiny_nav2')
runApp('C:/Users/sonou/Dropbox/git/math421/gganimate/shiny_nav2')
runApp('C:/Users/sonou/Dropbox/git/math421/gganimate/shiny_nav2')
runApp('C:/Users/sonou/Dropbox/git/math421/gganimate/shiny_nav2')
runApp('C:/Users/sonou/Dropbox/git/math421/gganimate/shiny_nav2')
runApp()
runApp('C:/Users/sonou/Dropbox/git/math421/gganimate/shiny_nav2')
runApp('C:/Users/sonou/Dropbox/git/math421/gganimate/shiny_fa20/a9.R')
runApp('C:/Users/sonou/Dropbox/git/math421/gganimate/shiny_fa20/a9.R')
runApp('C:/Users/sonou/Dropbox/git/math421/gganimate/shiny_fa20/a9.R')
radioButtons
?radioButtons
runApp('C:/Users/sonou/Dropbox/git/math421/gganimate/shiny_fa20/a9.R')
runApp('C:/Users/sonou/Dropbox/git/math421/gganimate/shiny_fa20/a9.R')
?h3
runApp('C:/Users/sonou/Dropbox/git/math421/gganimate/shiny_fa20/a9.R')
runApp('C:/Users/sonou/Dropbox/git/math421/gganimate/shiny_fa20/a9.R')
runApp('C:/Users/sonou/Dropbox/git/math421/gganimate/shiny_fa20/a9.R')
runApp('C:/Users/sonou/Dropbox/git/math421/gganimate/shiny_fa20/a9.R')
runApp('C:/Users/sonou/Dropbox/git/math421/gganimate/shiny_fa20/app9/a9.R')
-(3)^4
-(3)^4+18*(3^2)
sqrt(3)
-1.73^4+18*1.73^2
-1.73^4+18*(1.73^2)
-9+18*3
98000/.002
sqrt(98000/.002)
13.5+0.167
5000^3
500^3
50^3
2*50^3
sqrt(.245^2+1)
sqrt((0-0.245)^2+1)
sqrt((0.057-0.245)^2)
0.057-.245
sqrt((1-0.245)^2)
sqrt((0.434-0.245)^2+1)
sqrt((0.623-0.245)^2)
sqrt(32)
4^4-32*4^2
sqrt(64/12)
2.31^4-32*2.31^2
version
Y
knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
use_python('C:/Users/sonou/anaconda3/')
?py_config
library(reticulate)
py_install("pandas")
library(reticulate)
py_install("matplotlib")
library(shiny); runApp('C:/Users/sonou/Dropbox/git/math421/chris.R')
runApp('C:/Users/sonou/Dropbox/git/math421/chris.R')
runApp('C:/Users/sonou/Dropbox/git/math421/chris.R')
runApp('C:/Users/sonou/Dropbox/git/math421/chris.R')
runApp('C:/Users/sonou/Dropbox/git/math421/chris.R')
runApp('C:/Users/sonou/Downloads/a2_3.R')
runApp('C:/Users/sonou/Dropbox/git/math421/chris.R')
runApp('C:/Users/sonou/Dropbox/git/math421/chris.R')
install.packages("linl")
library(rmarkdown)
draft("myletter.Rmd", template="pdf", package="linl", edit=FALSE)
render("myletter.Rmd")
knit_with_parameters('~/myletter.Rmd')
install.packages("komaletter")
library(tidyverse)
df <- read_csv('https://raw.githubusercontent.com/govex/COVID-19/master/data_tables/vaccine_data/us_data/time_series/vaccine_data_us_timeline.csv')
df
df$week <- week(df$Date)
d1 <- df %>% group_by(week, Province_State) %>% summarise(mean = mean(Doses_shipped, na.rm=TRUE))
library(lubridate)
df$week <- week(df$Date)
d1 <- df %>% group_by(week, Province_State) %>% summarise(mean = mean(Doses_shipped, na.rm=TRUE))
d2 <- d1 %>% group_by(week) %>% mutate(rank=rank(-mean)) %>% ungroup()
d2
sum(is.na(d2))
d3 <- d2 %>% filter(rank <= 10)
a1 <- d3 %>% ggplot(aes(x=rank, y=mean, group=state, fill=state, label=state)) + geom_col()+
geom_text(aes(y = mean, label = state), hjust = 1.4)+
coord_flip(clip = "off", expand = FALSE) +scale_x_reverse()+
labs(title = 'Week {closest_state}', x='', y='Total Number of Positive Caeses', fill='state')+
theme(plot.title = element_text(hjust = 1, size = 22),
axis.ticks.y = element_blank(),
axis.text.y  = element_blank()) +
transition_states(week)+
ease_aes("cubic-in-out")
animate(a1, nframes = 400, fps = 10)
library(gganimate)
a1 <- d3 %>% ggplot(aes(x=rank, y=mean, group=state, fill=state, label=state)) + geom_col()+
geom_text(aes(y = mean, label = state), hjust = 1.4)+
coord_flip(clip = "off", expand = FALSE) +scale_x_reverse()+
labs(title = 'Week {closest_state}', x='', y='Total Number of Positive Caeses', fill='state')+
theme(plot.title = element_text(hjust = 1, size = 22),
axis.ticks.y = element_blank(),
axis.text.y  = element_blank()) +
transition_states(week)+
ease_aes("cubic-in-out")
animate(a1, nframes = 400, fps = 10)
a1 <- d3 %>% ggplot(aes(x=rank, y=mean, group=Province_State, fill=Province_State, label=Province_State)) + geom_col()+
geom_text(aes(y = mean, label = Province_State), hjust = 1.4)+
coord_flip(clip = "off", expand = FALSE) +scale_x_reverse()+
labs(title = 'Week {closest_state}', x='', y='Total Number of Positive Caeses', fill='state')+
theme(plot.title = element_text(hjust = 1, size = 22),
axis.ticks.y = element_blank(),
axis.text.y  = element_blank()) +
transition_states(week)+
ease_aes("cubic-in-out")
animate(a1, nframes = 400, fps = 10)
a1 <- d3 %>% ggplot(aes(x=rank, y=mean, group=Province_State, fill=Province_State)) + geom_col()+
geom_text(aes(y = mean, label = Province_State), hjust = 1.4)+
coord_flip(clip = "off", expand = FALSE) +scale_x_reverse()+
labs(title = 'Week {closest_state}', x='', y='Total Number of Positive Caeses', fill='state')+
theme(plot.title = element_text(hjust = 1, size = 22),
axis.ticks.y = element_blank(),
axis.text.y  = element_blank()) +
transition_states(week)+
ease_aes("cubic-in-out")
animate(a1, nframes = 400, fps = 10)
a1 <- d3 %>% ggplot(aes(x=rank, y=mean, group=Province_State, fill=Province_State)) + geom_col()+
geom_text(aes(y = mean, label = Province_State), hjust = 1.4)+
coord_flip(clip = "off", expand = FALSE) +scale_x_reverse()+
labs(title = 'Week {closest_state}', x='', y='Total Number of Positive Caeses', fill='state')+
theme(plot.title = element_text(hjust = 1, size = 22),
axis.ticks.y = element_blank(),
axis.text.y  = element_blank(),
theme(legend.position = "none")
) +
transition_states(week)+
ease_aes("cubic-in-out")
animate(a1, nframes = 400, fps = 10)
a1 <- d3 %>% ggplot(aes(x=rank, y=mean, group=Province_State, fill=Province_State, label=Province_State)) + geom_col()+
geom_text(aes(y = mean, label = Province_State), hjust = 1.4)+
coord_flip(clip = "off", expand = FALSE) +scale_x_reverse()+
labs(title = 'Week {closest_state}', x='', y='Total Number of Positive Caeses', fill='state')+
theme(plot.title = element_text(hjust = 1, size = 22),
axis.ticks.y = element_blank(),
axis.text.y  = element_blank(),theme(legend.position = "none")
) +
transition_states(week)+
ease_aes("cubic-in-out")
animate(a1, nframes = 400, fps = 10)
a1
df <- read_csv('https://raw.githubusercontent.com/govex/COVID-19/master/data_tables/vaccine_data/us_data/time_series/vaccine_data_us_timeline.csv')
library(lubridate)
df$week <- week(df$Date)
d1 <- df %>% group_by(week, Province_State) %>% summarise(mean = mean(Doses_shipped, na.rm=TRUE))
d2 <- d1 %>% group_by(week) %>% mutate(rank=rank(-mean)) %>% ungroup()
d3 <- d2 %>% filter(rank <= 10)
a1 <- d3 %>% ggplot(aes(x=rank, y=mean, group=state, fill=state, label=state)) + geom_col()+
geom_text(aes(y = mean, label = state), hjust = 1.4)+
coord_flip(clip = "off", expand = FALSE) +scale_x_reverse()+
labs(title = 'Week {closest_state}', x='', y='Total Number of Positive Caeses', fill='state')+
theme(plot.title = element_text(hjust = 1, size = 22),
axis.ticks.y = element_blank(),
axis.text.y  = element_blank()) +
transition_states(week)+
ease_aes("cubic-in-out")
animate(a1, nframes = 400, fps = 10)
df <- read_csv('https://raw.githubusercontent.com/govex/COVID-19/master/data_tables/vaccine_data/us_data/time_series/vaccine_data_us_timeline.csv')
library(lubridate)
df$week <- week(df$Date)
d1 <- df %>% group_by(week, Province_State) %>% summarise(mean = mean(Doses_shipped, na.rm=TRUE))
d2 <- d1 %>% group_by(week) %>% mutate(rank=rank(-mean)) %>% ungroup()
d3 <- d2 %>% filter(rank <= 10)
a1 <- d3 %>% ggplot(aes(x=rank, y=mean, group=Province_State, fill=Province_State, label=Province_State)) + geom_col()+
geom_text(aes(y = mean, label = Province_State), hjust = 1.4)+
coord_flip(clip = "off", expand = FALSE) +scale_x_reverse()+
labs(title = 'Week {closest_state}', x='', y='Total Number of Positive Caeses', fill='state')+
theme(plot.title = element_text(hjust = 1, size = 22),
axis.ticks.y = element_blank(),
axis.text.y  = element_blank()) +
transition_states(week)+
ease_aes("cubic-in-out")
animate(a1, nframes = 400, fps = 10)
df <- read_csv('https://raw.githubusercontent.com/govex/COVID-19/master/data_tables/vaccine_data/us_data/time_series/vaccine_data_us_timeline.csv')
library(lubridate)
df$week <- week(df$Date)
d1 <- df %>% group_by(week, Province_State) %>% summarise(mean = mean(Doses_shipped, na.rm=TRUE))
d2 <- d1 %>% group_by(week) %>% mutate(rank=rank(-mean)) %>% ungroup()
d3 <- d2 %>% filter(rank <= 10)
a1 <- d3 %>% ggplot(aes(x=rank, y=mean, group=Province_State, fill=Province_State, label=Province_State)) + geom_col()+
geom_text(aes(y = mean, label = Province_State), hjust = 1.4)+
coord_flip(clip = "off", expand = FALSE) +scale_x_reverse()+
labs(title = 'Week {closest_state}', x='', y='Total Number of Positive Caeses', fill='state')+
theme(plot.title = element_text(hjust = 1, size = 22),
axis.ticks.y = element_blank(),
axis.text.y  = element_blank(), legend.position = "none") +
transition_states(week)+
ease_aes("cubic-in-out")
animate(a1, nframes = 400, fps = 10)
devtools::install_github("hadley/emo")
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
keyword_search = '#olegunnarsolskjaer'
df <- search_tweets(q = keyword_search,
n = 18000,
include_rts = FALSE,
`-filter` = "replies",
lang = "en") %>%
mutate(created_at = ymd_hms(format(created_at, tz = "US/Eastern")))
library(rtweet)
library(tidytext)
library(ggpubr)
library(tidyverse)
library(knitr)
library(lubridate)
keyword_search = '#olegunnarsolskjaer'
df <- search_tweets(q = keyword_search,
n = 18000,
include_rts = FALSE,
`-filter` = "replies",
lang = "en") %>%
mutate(created_at = ymd_hms(format(created_at, tz = "US/Eastern")))
keyword_search = '#olegunnarsolskjaer'
df <- search_tweets(q = keyword_search,
n = 18000,
include_rts = FALSE,
`-filter` = "replies",
lang = "en") %>%
mutate(created_at = ymd_hms(format(created_at, tz = "US/Eastern")))
write_csv(df, 'twitter_data_ole.csv')
df %>%
unnest_tokens(output = hashtag, input = text, token = "tweets") %>%
filter(hashtag != "#olegunnarsolskjaer", str_detect(hashtag, "^#")) %>%
count(hashtag, sort = TRUE) %>%
head(10)
df %>%
unnest_tokens(output = hashtag, input = text, token = "tweets") %>%
filter(hashtag != "#olegunnarsolskjaer", str_detect(hashtag, "^#")) %>%
count(hashtag, sort = TRUE) %>%
head(5) %>%
ggplot(aes(x = n, y = reorder(hashtag, n)))+
geom_col()+
labs(x = 'Frequency', y = '')
df %>%
unnest_tokens(output = hashtag, input = text, token = "tweets") %>%
filter(!hashtag %in% c("#olegunnarsolskjaer",'mufc','manutd','manchesterunited'), str_detect(hashtag, "^#")) %>%
count(hashtag, sort = TRUE) %>%
head(5) %>%
ggplot(aes(x = n, y = reorder(hashtag, n)))+
geom_col()+
labs(x = 'Frequency', y = '')
df %>%
unnest_tokens(output = hashtag, input = text, token = "tweets") %>%
filter(!hashtag %in% c("#olegunnarsolskjaer",'#mufc','#manutd','#manchesterunited'), str_detect(hashtag, "^#")) %>%
count(hashtag, sort = TRUE) %>%
head(5) %>%
ggplot(aes(x = n, y = reorder(hashtag, n)))+
geom_col()+
labs(x = 'Frequency', y = '')
df %>%
unnest_tokens(output = hashtag, input = text, token = "tweets") %>%
filter(!hashtag %in% c("#olegunnarsolskjaer",'#mufc','#manutd','#manchesterunited'), str_detect(hashtag, "^#")) %>%
count(hashtag, sort = TRUE) %>%
head(10)
df %>%
arrange(-favorite_count) %>%
head(5) %>%
select(favorite_count, text, favorite_count)
library(RColorBrewer)
pal <- brewer.pal(8,"Dark2")
library(wordcloud)
df %>%
unnest_tokens(output = hashtag, input = text, token = "tweets") %>%
filter(hashtag != "#olegunnarsolskjaer", str_detect(hashtag, "^#")) %>%
count(hashtag, sort = TRUE) %>%
mutate(hashtag = str_remove(hashtag, '#')) %>%
filter(hashtag != 'mufc') %>%
with(wordcloud(hashtag, n, random.order = FALSE, max.words = 50, colors = pal))
library(RColorBrewer)
pal <- brewer.pal(8,"Dark2")
library(wordcloud)
df %>%
unnest_tokens(output = hashtag, input = text, token = "tweets") %>%
filter(!hashtag %in% c("#olegunnarsolskjaer",'#mufc','#manutd','#manchesterunited'), str_detect(hashtag, "^#")) %>%
count(hashtag, sort = TRUE) %>%
mutate(hashtag = str_remove(hashtag, '#')) %>%
filter(hashtag != 'mufc') %>%
with(wordcloud(hashtag, n, random.order = FALSE, max.words = 50, colors = pal))
# Install emo pakage:
# devtools::install_github("hadley/emo")
library(emo)
df %>%
mutate(emoji = ji_extract_all(text)) %>%
unnest(cols = c(emoji)) %>%
count(emoji, sort = TRUE) %>%
head(5) %>%
ggplot(aes(y=reorder(emoji,n), x=n)) +
geom_col()+
theme(axis.text.y = element_text(size = 40))+
labs(x = 'Frequency', y = '')
words <- df %>%
mutate(text = str_remove_all(text, "&amp;|&lt;|&gt;"),
text = str_remove_all(text, "\\s?(f|ht)(tp)(s?)(://)([^\\.]*)[\\.|/](\\S*)"),
text = str_remove_all(text, "[^\x01-\x7F]")) %>%
unnest_tokens(word, text, token = "tweets") %>%
filter(!word %in% stop_words$word,
!word %in% str_remove_all(stop_words$word, "'"),
str_detect(word, "[a-z]"),
!str_detect(word, "^#"),
!str_detect(word, "@\\S+")) %>%
count(word, sort = TRUE)
al <- brewer.pal(8,"Dark2")
library(wordcloud)
words %>%
with(wordcloud(word, n, random.order = FALSE, max.words = 50, colors = pal))
words <- df %>%
mutate(text = str_remove_all(text, "&amp;|&lt;|&gt;"),
text = str_remove_all(text, "\\s?(f|ht)(tp)(s?)(://)([^\\.]*)[\\.|/](\\S*)"),
text = str_remove_all(text, "[^\x01-\x7F]")) %>%
unnest_tokens(word, text, token = "tweets") %>%
filter(!word %in% stop_words$word,
!word %in% str_remove_all(stop_words$word, "'"),
str_detect(word, "[a-z]"),
!str_detect(word, "^#"),
!str_detect(word, "@\\S+"),
word == 'united') %>%
count(word, sort = TRUE)
al <- brewer.pal(8,"Dark2")
library(wordcloud)
words %>%
with(wordcloud(word, n, random.order = FALSE, max.words = 50, colors = pal))
words <- df %>%
mutate(text = str_remove_all(text, "&amp;|&lt;|&gt;"),
text = str_remove_all(text, "\\s?(f|ht)(tp)(s?)(://)([^\\.]*)[\\.|/](\\S*)"),
text = str_remove_all(text, "[^\x01-\x7F]")) %>%
unnest_tokens(word, text, token = "tweets") %>%
filter(!word %in% stop_words$word,
!word %in% str_remove_all(stop_words$word, "'"),
str_detect(word, "[a-z]"),
!str_detect(word, "^#"),
!str_detect(word, "@\\S+"),
word != 'united') %>%
count(word, sort = TRUE)
al <- brewer.pal(8,"Dark2")
library(wordcloud)
words %>%
with(wordcloud(word, n, random.order = FALSE, max.words = 50, colors = pal))
words <- df %>%
mutate(text = str_remove_all(text, "&amp;|&lt;|&gt;"),
text = str_remove_all(text, "\\s?(f|ht)(tp)(s?)(://)([^\\.]*)[\\.|/](\\S*)"),
text = str_remove_all(text, "[^\x01-\x7F]")) %>%
unnest_tokens(word, text, token = "tweets") %>%
filter(!word %in% stop_words$word,
!word %in% str_remove_all(stop_words$word, "'"),
str_detect(word, "[a-z]"),
!str_detect(word, "^#"),
!str_detect(word, "@\\S+"),
!word %in% c('united','manchester')) %>%
count(word, sort = TRUE)
al <- brewer.pal(8,"Dark2")
library(wordcloud)
words %>%
with(wordcloud(word, n, random.order = FALSE, max.words = 50, colors = pal))
trends_available()
df %>%
unnest_tokens(mentions, text, "tweets", to_lower = FALSE) %>%
filter(str_detect(mentions, "^@")) %>%
count(mentions, sort = TRUE) %>%
head(10) %>%
ggplot(aes(x = n, y = reorder(country, n)))+
geom_col()+
labs(x = 'Frequency', y = '')
df %>%
unnest_tokens(mentions, text, "tweets", to_lower = FALSE) %>%
filter(str_detect(mentions, "^@")) %>%
count(mentions, sort = TRUE) %>%
head(10) %>%
ggplot(aes(x = n, y = reorder(mentions, n)))+
geom_col()+
labs(x = 'Frequency', y = '')
library(tidyverse)
df <- read_csv("https://covidtracking.com/data/download/all-states-history.csv")
df
max(df$date)
min(df$date)
max(df$date)
df %>% names
df %>% class
df %>% lapply %>% class
df %>% lapply(.) %>% class
df
ymd(df$date)
library(lubridate)
ymd(df$date)
df$date
month(df$date)
df
as.Date(df$date)
class(as.Date(df$date))
class(df$date)
df
class(df$state)
df$date <- as.Date(df$date)
df
df %>% filter(state=='RI')
df %>% filter(state=='RI') %>% select(hospitalized)
df %>% filter(state=='RI') %>% select(hospitalized) %>% mean()
df %>% filter(state=='RI') %>% select(hospitalized) %>% mean(na.rm=TRUE)
df %>% filter(state=='RI') %>% select(hospitalized) %>% mean(.,na.rm=TRUE)
df %>% filter(state=='RI') %>% select(hospitalized) %>% summarise(mean)
df %>% filter(state=='RI') %>% select(hospitalized) %>% summarise(mean=mean)
df %>% filter(state=='RI') %>% select(hospitalized) %>% summarise(a = sum(hospitalized))
df %>% filter(state=='RI') %>% summarise(a = sum(hospitalized))
df %>% filter(state=='RI') %>% summarise(a = sum(hospitalized, na.rm = TRUE))
df
table(df$state)
df %>% count(state)
df %>% count(state) %>% arrange(n)
df %>% count(state) %>% arrange(-n)
df
df %>% count(state)
df %>% summarise(mean_death_increase = mean(deathIncrease))
df %>% filter(state=='RI') %>% summarise(mean_death_increase = mean(deathIncrease))
setwd("C:/Users/sonou/Dropbox/git/math421")
df <- read_csv('data/titanic.csv')
library(c('tidyverse'))
library(tidyverse)
library(ggplot2)
df <- read_csv('data/titanic.csv')
df
ggplot(df,
aes(x = Fare,
y = Age))
ggplot(df,
aes(x = Fare,
y = Age))+geom_point()
ggplot(df,
aes(x = Fare,
y = Age, color=Survived))+geom_point()
ggplot(df,
aes(x = Fare,
y = Age, color=as.character(Survived)))+geom_point()
ggplot(df,
aes(x = Fare,
y = Age, color=Survived))+geom_point()
ggplot(df,
aes(x = Fare,
y = Age, color=Sex)+geom_point()+transition_states(Survived)
ggplot(df,
aes(x = Fare,
y = Age, color=Sex))+geom_point()+transition_states(Survived)
library(gganimate)
ggplot(df,
aes(x = Fare,
y = Age, color=Sex))+geom_point()+transition_states(Survived)
ggplot(df,
aes(x = Fare,
y = Age, color=Survived))+geom_point()+transition_states(Sex)
# R markdown options
knitr::opts_chunk$set(echo = TRUE,
fig.width = 10,
fig.height = 5,
fig.align = "center",
message = FALSE,
warning = FALSE)
df <- read_csv('https://bryantstats.github.io/math421/data/titanic.csv')
df <- df %>%
mutate(Survived = as.character(Survived),
Pclass = as.character(Pclass))
df %>% ggplot(aes(x = Sex,
fill=Survived))+
geom_bar()
df %>% ggplot(aes(x = Sex,
fill=Survived))+
geom_bar()+
transition_states(Pclass)#<<
df %>% ggplot(aes(x = Sex,
fill=Survived))+
geom_bar(position = 'fill')
df %>% ggplot(aes(x = Sex,
fill=Survived))+
geom_bar(position = 'fill')+
transition_states(Pclass)#<<
df %>% ggplot(aes(x = Sex,
fill=Survived))+
geom_bar(position = 'fill')
df %>% ggplot(aes(
fill=Survived))+
geom_bar(position = 'fill')
df %>% ggplot(aes(fill=Survived))+
geom_bar(position = 'fill')
df %>% ggplot(aes(x = Sex,
fill=Survived))+
geom_bar(position = 'fill')+
transition_states(Pclass) + #<<
labs(title = 'Class: {closest_state}') #<<
log2(3/4)+log2(1/4)
(3/4)*log2(3/4)+(1/4)*log2(1/4)
tinytex::reinstall_tinytex()
