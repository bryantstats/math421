x <- c(1:10)
x %>% log %>% sum
x <- c(1:10)
sum(log(x))
df
df
options(htmltools.dir.version = FALSE)
by(df$New_deaths, df$WHO_region, mean)
?by
by(df$New_deaths, df$WHO_region, FUN=mean)
df
df <-  read.csv('https://covid19.who.int/WHO-COVID-19-global-data.csv')
df
str(df)
df
head(df)
df$WHO_region
table(df$WHO_region)
head(df)
df$New_deaths2 <- cut(df$New_deaths,
breaks = c(-Inf, 2, 5,Inf),
labels=c('low_death','mid_death','high_death'))
table(df$New_deaths2)
df$New_deaths3 <- case_when(df$New_cases<2 ~ 'low_death',
df$New_cases<5 ~ 'mid_death',
TRUE~'high_death')
table(df$New_deaths3)
df$New_deaths3 <- case_when(df$New_deaths<2 ~ 'low_death',
df$New_deaths<5 ~ 'mid_death',
TRUE~'high_death')
table(df$New_deaths3)
table(df$New_deaths2)
df$New_cases2 <- case_when(df$New_cases==0 ~ 'No_new_cases',
TRUE ~ 'Has_new_cases')
table(df$New_cases2)
df$New_cases2 <- ifelse(df$New_cases==0,
'No_new_cases','Has_new_cases')
table(df$New_cases2)
df$New_deaths2 <- case_when(df$New_deaths<2 ~ 'low_death',
df$New_deaths<5 ~ 'mid_death',
TRUE~'high_death')
table(df$New_deaths2)
head(df)
names(df)
table(df$WHO_region)
str(df)
# Check type
class(df$Date_report)
str(df)
# Change type
df$Date_report = as.Date(df$Date_report)
df <-  read.csv('https://covid19.who.int/WHO-COVID-19-global-data.csv')
names(df)[1] <- 'Date_report'
# Check type
class(df$Date_report)
str(df)
# Change type
df$Date_report = as.Date(df$Date_report)
# Change type
str(df)
?weekdays
?year
?years
years(df$Date_report)
library(lubridate)
years(df$Date_report)
table(years(df$Date_report))
month(df$Date_report)
?month
?month
# Create
df$month <- month(df$Date_report)
table(df$month)
df$month
class(df$month)
?month
class(df$month, label = TRUE)
library(lubridate)
class(df$month, label = TRUE)
month(df$month, label = TRUE)
detach(lubridate)
detach("package:lubridate", unload=TRUE)
options(htmltools.dir.version = FALSE)
df <-  read.csv('https://covid19.who.int/WHO-COVID-19-global-data.csv')
names(df)[1] <- 'Date_report'
# Check type
class(df$Date_report)
str(df)
# Change type
df$Date_report = as.Date(df$Date_report)
month(df$month, label = TRUE)
library(lubridate)
month(df$month, label = TRUE)
library(lubridate)
df$month <- month(df$Date_report, label = TRUE)
table(df$month)
?case_when
case_when
library(tidyverse)
case_when
table(df$month)
# Create a variable month
library(lubridate)
df$month <- month(df$Date_report, label = TRUE)
# group months into fewer categories
df$month2 <- case_when(df$month %in% c('Sep','Oct','Nov','Dec') ~ 'fall_semester',
df$month %in% c('Feb','Mar','Apr','May') ~ 'spring_semester',
TRUE~'break')
table(df$month2)
colSums(is.na(df))
options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(message = FALSE, eval = FALSE)
xaringanExtra::use_tile_view()
xaringanExtra::use_tile_view()
install.packages('tidyverse')
library(tidyverse)
install.packages("tidyverse")
library(tidyverse)
library(tidyverse)
df <- read_csv('https://covidtracking.com/data/download/all-states-history.csv')
names(df)
table(df$dataQualityGrade)
df
start_time <- Sys.time()
df <- read.csv('https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-counties.csv')
end_time <- Sys.time()
end_time - start_time
df %>%
filter(date>'01-01-2021') %>%
group_by(state) %>%
summarise(average_deaths = mean(deaths)) %>%
arrange(-average_deaths)
df <- read_csv('https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-counties.csv')
# Select variable state and date for df1
df1 <-  select(df, state, date)
# Deselect variable state from df
df2 <-  select(df, -state)
# Select rows or days with no deaths
df3 <- filter(df, deaths==0, )
fg
df
# conventional way
df1 = group_by(df, state)
summarise(df1, summarise(mean(deaths)))
df1 = group_by(df, state)
df1
summarise(df1, summarise(mean(deaths)))
# Pipe
df %>%
group_by(state) %>%
summarise(mean(deaths))
# conventional way
df1 = filter(df, date>'01-01-2021')
df2 = group_by(df1, state )
summarise(df2, summarise(mean(deaths)))
# Pipe
df %>%
filter(date>'01-01-2021') %>%
group_by(state) %>%
summarise(mean(deaths))
summarise(df1, summarise(mean(deaths)))
# conventional way
df1 = group_by(df, state)
summarise(df1, summarise(mean(deaths)))
df %>%
group_by(state) %>%
summarise(mean(deaths))
df
# conventional way
df1 = group_by(df, state)
df1
summarise(df1, summarise(mean(deaths)))
summarise(df1, summarise(mean(cases)))
?count
df %>% count(cases)
df %>% filter(state=='Rhode Island') %>% count(cases)
df %>% filter(state=='Rhode Island') %>% count(cases) %>% arrange(n)
df %>% filter(state=='Rhode Island') %>% count(cases) %>% arrange(-n)
df <- read_csv(../data/titanic.csv)
df <- read_csv('../data/titanic.csv')
df
df %>% count(Pclass)
df %>% count(Embarked)
options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(message = FALSE)
df <- read_csv('https://covidtracking.com/data/download/all-states-history.csv')
library(tidyverse)
library(lubridate)
df %>%
filter(positiveIncrease>0) %>%
mutate(year = year(date))
df
df <- read_csv('https://covidtracking.com/data/download/all-states-history.csv')
df
df %>%
filter(positiveIncrease>0) %>%
mutate(year = year(date))
df %>%
filter(positiveIncrease>0) %>%
mutate(year = year(date),
quarters = as.factor(quarters(date)),
month = as.factor(month(date)))
df %>%
filter(positiveIncrease>0) %>%
mutate(year = year(date),
quarters = as.factor(quarters(date)),
month = as.factor(month(date)),
day = wday(df$date),
day_type = case_when(df$day < 6 ~ 'weekday',
TRUE~'weekend'))
df %>%
filter(positiveIncrease>0) %>%
mutate(year = year(date),
quarters = as.factor(quarters(date)),
month = as.factor(month(date)),
day = wday(df$date),
day_type = case_when(day < 6 ~ 'weekday',
TRUE~'weekend'))
df %>%
filter(positiveIncrease>0) %>%
mutate(year = year(date),
quarters = as.factor(quarters(date)),
month = as.factor(month(date)),
day = wday(date),
day_type = case_when(day < 6 ~ 'weekday',
TRUE~'weekend'))
df %>%
filter(positiveIncrease>0) %>%
mutate(year = year(date),
quarters = as.factor(quarters(date)),
month = as.factor(month(date)),
day = wday(date),
day_type = case_when(day < 6 ~ 'weekday',
TRUE~'weekend'))
library(lubridate)
quarters(df$date)
class(quarters(df$date))
class(month(df$date))
month(df$date)
?month
month(df$date, label = TRUE)
wday(df$date)
wday(df$date, label = TRUE)
knitr::opts_chunk$set(message = FALSE)
df %>% filter(Province_State=='Rhode Island') %>% ggplot()+geom_point(mapping = aes(x = Date, y = Doses_admin, color = Vaccine_Type))
library(tidyverse)
df <- read_csv('https://raw.githubusercontent.com/govex/COVID-19/master/data_tables/vaccine_data/us_data/time_series/time_series_covid19_vaccine_us.csv')
df
df
df <- read_csv('https://raw.githubusercontent.com/govex/COVID-19/master/data_tables/vaccine_data/us_data/time_series/time_series_covid19_vaccine_doses_admin_US.csv')
df
names(df)
df
read_csv("https://raw.githubusercontent.com/govex/COVID-19/master/data_tables/vaccine_data/us_data/time_series/vaccine_data_us_timeline.csv")
read_csv("https://raw.githubusercontent.com/govex/COVID-19/master/data_tables/vaccine_data/us_data/time_series/vaccine_data_us_timeline.csv")
library(tidyverse)
df <- read_csv('https://raw.githubusercontent.com/govex/COVID-19/master/data_tables/vaccine_data/us_data/time_series/time_series_covid19_vaccine_us.csv')
df
table(df$Country_Region)
df <- read_csv('https://raw.githubusercontent.com/owid/covid-19-data/master/public/data/vaccinations/vaccinations.csv')
df
names(df)
df <- read_csv('https://raw.githubusercontent.com/owid/covid-19-data/master/public/data/vaccinations/country_data/United%20States.csv')
df
table(df$vaccine)
df <- read_csv('https://raw.githubusercontent.com/owid/covid-19-data/master/public/data/vaccinations/vaccinations-by-manufacturer.csv')
df
table(df$vaccine)
table(df$location)
df
df %>% arrange(date)
df %>% arrange(-date)
max(df$date)
df %>% filter(Province_State=='United States') %>% ggplot()+geom_point(mapping = aes(x = date, y = total_vaccinations, color = Vaccine))
df %>% filter(location=='United States') %>% ggplot()+geom_point(mapping = aes(x = date, y = total_vaccinations, color = Vaccine))
df %>% filter(location=='United States') %>% ggplot()+geom_point(mapping = aes(x = date, y = total_vaccinations, color = vaccine))
df %>% filter(location=='China') %>% ggplot()+geom_point(mapping = aes(x = date, y = total_vaccinations, color = vaccine))
df %>% filter(location=='Ukraine') %>% ggplot()+geom_point(mapping = aes(x = date, y = total_vaccinations, color = vaccine))
ggplot()+geom_point(mapping = aes(x = date, y = total_vaccinations, color = vaccine))
df %>% ggplot()+geom_point(mapping = aes(x = date, y = total_vaccinations, color = vaccine))
df %>% filter(location=='Ukraine', date>='2022-01-01') %>% ggplot()+geom_point(mapping = aes(x = date, y = total_vaccinations, color = vaccine))
df %>% filter(location=='United State', date>='2022-01-01') %>% ggplot()+geom_point(mapping = aes(x = date, y = total_vaccinations, color = vaccine))
df %>% filter(location=='United States', date>='2022-01-01') %>% ggplot()+geom_point(mapping = aes(x = date, y = total_vaccinations, color = vaccine))
df %>% filter(location=='European Union', date>='2022-01-01') %>% ggplot()+geom_point(mapping = aes(x = date, y = total_vaccinations, color = vaccine))
df %>% filter(location=='Argentina', date>='2022-01-01') %>% ggplot()+geom_point(mapping = aes(x = date, y = total_vaccinations, color = vaccine))
df %>% group_by(vaccine) %>% summarise(total_vaccinations)
df %>% group_by(vaccine) %>% summarise(mean(total_vaccinations))
df %>% group_by(vaccine) %>% summarise(n = mean(total_vaccinations)) %>% arrange(-n)
df %>% filter(vaccine %in% c('Pfizer/BioNTech','Moderna')) %>% ggplot()+geom_point(mapping = aes(x = date, y = total_vaccinations, color = vaccine))
df %>% filter(vaccine %in% c('Pfizer/BioNTech','Moderna'), localion='United States') %>% ggplot()+geom_point(mapping = aes(x = date, y = total_vaccinations, color = vaccine))
df %>% filter(vaccine %in% c('Pfizer/BioNTech','Moderna'), localion=='United States') %>% ggplot()+geom_point(mapping = aes(x = date, y = total_vaccinations, color = vaccine))
df %>% filter(vaccine %in% c('Pfizer/BioNTech','Moderna'), location=='United States') %>% ggplot()+geom_point(mapping = aes(x = date, y = total_vaccinations, color = vaccine))
names(df)
table(df$location)
df %>% filter(location %in% c('South Korea','Japan','Hong Kong')) %>% ggplot()+geom_point(mapping = aes(x = date, y = total_vaccinations, color = vaccine))
df %>% filter(location %in% c('South Korea','Japan','Hong Kong')) %>% group_by(date) %>%summarise(sum(total_vaccinations))
df %>% filter(location %in% c('South Korea','Japan','Hong Kong')) %>% group_by(date, vaccine) %>%summarise(sum(total_vaccinations))
df %>% filter(location %in% c('South Korea','Japan','Hong Kong')) %>% group_by(date, vaccine) %>%summarise(total_vac=sum(total_vaccinations))
df %>% filter(location %in% c('South Korea','Japan','Hong Kong')) %>% group_by(date, vaccine) %>%summarise(total_vac=sum(total_vaccinations)) %>% ggplot()+geom_point(aes(x=date, y=total_vac, color=vaccine))
df
table(df$location)
# Create a dataset recording these two vaccine administered by date
d1 <- df %>% filter(location %in% c('United States, European Union')) %>% group_by(date, location) %>% summarise(total_vac2=mean(total_vaccinations, na.rm=TRUE))
d1
df %>% filter(location %in% c('United States, European Union'))
df
table(df$location)
df %>% filter(location %in% c('United States, European Union'))
df
df %>% filter(location %in% c('United States, European Union'))
df %>% filter(location %in% c('United States', 'European Union'))
d1 <- df %>% filter(location %in% c('United States', 'European Union')) %>% group_by(date, location) %>% summarise(total_vac2=mean(total_vaccinations, na.rm=TRUE))
d1
# Create a dataset recording these two vaccine administered by date
d1 <- df %>% filter(location %in% c('United States, European Union')) %>% group_by(date, location) %>% summarise(total_vac2=mean(total_vaccinations, na.rm=TRUE))
# Plot from the newly create data
d1 %>% ggplot()+geom_point(mapping=aes(x=date, y=total_vac2, color=location))
d1 <- df %>% filter(location %in% c('United States, European Union')) %>% group_by(date, location) %>% summarise(total_vac2=mean(total_vaccinations, na.rm=TRUE))
# Plot from the newly create data
d1 %>% ggplot()+geom_point(mapping=aes(x=date, y=total_vac2, color=location))
d1
# Create a dataset recording these two vaccine administered by date
d1 <- df %>% filter(location %in% c('United States', 'European Union')) %>% group_by(date, location) %>% summarise(total_vac2=mean(total_vaccinations, na.rm=TRUE))
# Plot from the newly create data
d1 %>% ggplot()+geom_point(mapping=aes(x=date, y=total_vac2, color=location))
d1 %>% ggplot()+geom_point(mapping=aes(x=date, y=total_vac2, color=location))
# Create a dataset recording these two vaccine administered by date
d1 <- df %>% filter(location %in% c('United States', 'European Union')) %>% group_by(date, location) %>% summarise(total_vac2=sum(total_vaccinations, na.rm=TRUE))
# Plot from the newly create data
d1 %>% ggplot()+geom_point(mapping=aes(x=date, y=total_vac2, color=location))
d1 %>% ggplot()+geom_point(mapping=aes(x=date, y=total_vac2, color=location))
df %>% filter(location %in% c('United States', 'European Union')) %>% group_by(date, location) %>% summarise(total_vac2=sum(total_vaccinations, na.rm=TRUE)) %>% ggplot()+geom_point(mapping=aes(x=date, y=total_vac2, color=location))
df %>% filter(location %in% c('United States', 'European Union')) %>% group_by(date, location) %>% summarise(total_vac2=sum(total_vaccinations, na.rm=TRUE)) %>% ggplot()+geom_point(mapping=aes(x=date, y=total_vac2, color=location))
max(df$date)
min(df$date)
?quarters
?quarter
options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(message = FALSE, warning = FALSE)
df %>% ggplot()+
geom_bar(mapping=aes(x=quarters))
options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(message = FALSE, warning = FALSE)
library(tidyverse)
library(knitr)
df <- read_csv('../data/all-states-history.csv')
df <- df %>% filter(deathIncrease>0,
positiveIncrease>0,
date<'2021-01-01')
library(lubridate)
df <- df %>%
filter(positiveIncrease>0) %>%
mutate(year = year(date),
quarters = quarters(date),
month = month(date, label = TRUE),
day = wday(date),
day_type = case_when(day < 6 ~ 'weekday',
TRUE~'weekend'))
```
df %>% ggplot()+
geom_bar(mapping=aes(x=quarters))
options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(message = FALSE, warning = FALSE)
library(tidyverse)
library(knitr)
df <- read_csv('../data/all-states-history.csv')
df <- df %>% filter(deathIncrease>0,
positiveIncrease>0,
date<'2021-01-01')
library(lubridate)
df <- df %>%
filter(positiveIncrease>0) %>%
mutate(year = year(date),
quarters = quarters(date),
month = month(date, label = TRUE),
day = wday(date),
day_type = case_when(day < 6 ~ 'weekday',
TRUE~'weekend'))
```
df %>% ggplot()+
geom_bar(mapping=aes(x=quarters))
options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(message = FALSE, warning = FALSE)
library(tidyverse)
library(knitr)
library(ggplot2)
library(tidyverse)
library(knitr)
library(ggplot2)
library(ggplot2)
version
library(ggplot2)
install.packages('gapminder')
install.packages('gganimate')
# R markdown options
knitr::opts_chunk$set(echo = TRUE,
fig.width = 10,
fig.height = 5,
fig.align = "center",
message = FALSE,
warning = FALSE)
# Load packages
library(gapminder)
library(gganimate)
library(ggplot2)
library(tidyverse)
library(lubridate)
library(knitr)
g <- ggplot(gapminder, aes(gdpPercap, lifeExp, size = pop, colour = continent)) +
geom_point(alpha = 0.7, show.legend = FALSE) +
scale_colour_manual(values = c("darkorchid4", "orange",
"purple", "darkorange", "black")) +
scale_size(range = c(2, 12)) +
scale_x_log10() +
facet_wrap(~continent) +
labs(title = 'Year: {frame_time}',
x = 'GDP per capita',
y = 'life expectancy') +
transition_time(year) +
ease_aes('linear')
animate(g)
install.packages('gifski')
# Load packages
library(gapminder)
library(gganimate)
library(ggplot2)
library(tidyverse)
library(lubridate)
library(knitr)
g <- ggplot(gapminder, aes(gdpPercap, lifeExp, size = pop, colour = continent)) +
geom_point(alpha = 0.7, show.legend = FALSE) +
scale_colour_manual(values = c("darkorchid4", "orange",
"purple", "darkorange", "black")) +
scale_size(range = c(2, 12)) +
scale_x_log10() +
facet_wrap(~continent) +
labs(title = 'Year: {frame_time}',
x = 'GDP per capita',
y = 'life expectancy') +
transition_time(year) +
ease_aes('linear')
animate(g)
# R markdown options
knitr::opts_chunk$set(echo = TRUE,
fig.width = 10,
fig.height = 5,
fig.align = "center",
message = FALSE,
warning = FALSE)
df <- read_csv('../data/WHO-COVID-19-global-data.csv')
library(gapminder)
library(gganimate)
library(ggplot2)
library(tidyverse)
library(lubridate)
library(knitr)
setwd("C:/Users/sonou/Dropbox/git/math421/data")
df <- read_csv('WHO-COVID-19-global-data.csv')
setwd("C:/Users/sonou/Dropbox/git/math421/gganimate")
df <- read_csv('../data/WHO-COVID-19-global-data.csv')
library(lubridate)
df <- df %>% filter(Date_reported>='2021-01-01', Date_reported<'2022-01-01')
df$week <- week(df$Date_reported)
d1 <- df %>% group_by(week, Country) %>% summarise(mean = mean(Cumulative_cases))
d2 <- d1 %>% group_by(week) %>% mutate(rank=rank(-mean))
d3 <- d2 %>% filter(rank <= 10)
a1 <- d3 %>% ggplot(aes(x=rank, y=mean, group=Country, fill=Country, label=Country)) + geom_col()+
geom_text(aes(y = mean, label = Country), hjust = 5, vjust = 5)+
coord_flip(clip = "off", expand = FALSE) +scale_x_reverse()+
labs(title = 'Week {closest_state}', x='', y='Total Number of Positive Caeses', fill='Country')+
theme(plot.title = element_text(hjust = 1, size = 22),
axis.ticks.y = element_blank(),
axis.text.y  = element_blank()) +
transition_states(week)+
ease_aes("cubic-in-out")
animate(a1)
df <- read_csv('../data/WHO-COVID-19-global-data.csv')
library(lubridate)
df <- df %>% filter(Date_reported>='2021-01-01', Date_reported<'2022-01-01')
df$week <- week(df$Date_reported)
d1 <- df %>% group_by(week, Country) %>% summarise(mean = mean(Cumulative_cases))
d2 <- d1 %>% group_by(week) %>% mutate(rank=rank(-mean))
d3 <- d2 %>% filter(rank <= 10)
a1 <- d3 %>% ggplot(aes(x=rank, y=mean, group=Country, fill=Country, label=Country)) + geom_col()+
geom_text(aes(y = mean, label = Country), hjust = .5)+
coord_flip(clip = "off", expand = FALSE) +scale_x_reverse()+
labs(title = 'Week {closest_state}', x='', y='Total Number of Positive Caeses', fill='Country')+
theme(plot.title = element_text(hjust = 1, size = 22),
axis.ticks.y = element_blank(),
axis.text.y  = element_blank()) +
transition_states(week)+
ease_aes("cubic-in-out")
animate(a1)
df <- read_csv('../data/WHO-COVID-19-global-data.csv')
library(lubridate)
df <- df %>% filter(Date_reported>='2021-01-01', Date_reported<'2022-01-01')
df$week <- week(df$Date_reported)
d1 <- df %>% group_by(week, Country) %>% summarise(mean = mean(Cumulative_cases))
d2 <- d1 %>% group_by(week) %>% mutate(rank=rank(-mean))
d3 <- d2 %>% filter(rank <= 10)
a1 <- d3 %>% ggplot(aes(x=rank, y=mean, group=Country, fill=Country, label=Country)) +
geom_col()+
geom_text(aes(y = mean, label = Country), hjust = .5)+
coord_flip(clip = "off", expand = FALSE) +scale_x_reverse()+
labs(title = 'Week {closest_state}', x='', y='Total Number of Positive Caeses', fill='Country')+
theme(plot.title = element_text(hjust = 1, size = 22),
axis.ticks.y = element_blank(),
axis.text.y  = element_blank()) +
transition_states(week)+
ease_aes("cubic-in-out")
animate(a1, nframes = 400)
df <- read_csv('../data/titanic.csv')
